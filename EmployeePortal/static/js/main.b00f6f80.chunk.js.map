{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Helpers/WebApi.js","components/Pages/Home.js","components/Pages/Employee/Employees.js","components/Pages/Department/Departments.js","components/AlertMessage.js","components/Pages/Department/AddDepartment.js","components/Pages/Department/EditDepartment.js","components/Pages/Employee/AddEmployee.js","components/Pages/Employee/EditEmployee.js","components/Pages/User/UserProfile.js","components/Pages/NotFoundPage.js","components/Helpers/ParseError.js","components/Pages/User/ChangePassword.js","components/Pages/User/EditUserProfile.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","handleSignOut","localStorage","removeItem","console","log","toggleNavbar","bind","state","collapsed","this","setState","User","SignOut","getItem","tag","Link","type","onClick","to","className","light","isOpen","navbar","Component","displayName","name","Layout","children","WebApi","apiUrl","data","method","auth","authHeader","headers","Authorization","requestInfo","withCredentials","body","trackPromise","fetch","then","res","ok","json","error","text","statusText","toUpperCase","alert","result","toString","Home","params","handleClick","Username","Password","response","userName","token","access_token","loggedInUser","setItem","history","push","placeholder","value","onChange","e","target","id","htmlFor","Employees","componentDidMount","totalRows","length","noOfPages","parseInt","pageRows","lastPageRows","employeeData","keys","Object","renderTableData","first","count","slice","map","employee","index","ID","FirstName","LastName","Gender","DepartmentName","DepartmentLocation","JobTitle","JoiningDate","InService","key","format","Date","title","pathname","data-toggle","renderTableHeader","header","pop","handleChangePage","k","preventDefault","firstRow","currentPageRows","activePage","renderPagination","pagination","j","href","handleForwardPage","persist","prevState","handleBackwardPage","handleAddEmployee","Redirect","Departments","departmentData","department","Name","Location","handleAddDepartment","AlertMessage","message","visible","color","AddDepartment","handleSubmit","showAlert","alertType","JSON","stringify","handleBack","goBack","Message","successAlert","errorAlert","EditDepartment","url","readOnly","location","AddEmployee","departments","dep","departmentOptions","fName","lName","DepartmentId","gender","salary","jobTitle","departmentId","GenderOptions","IsLoggedIn","EditEmployee","Salary","joiningDate","UserProfile","UserId","Email","Phone","resp","DOB","handleEditUser","UserName","NotFoundPage","ParseError","parsedError","parse","ModelState","modelState","getOwnPropertyNames","modelStateArr","exception","ChangePassword","oldPassword","newPassword","confirmPassword","EditUserProfile","prevEmail","prevPhone","Id","handleChangeEmail","ShowConfirmEmail","handleChangePhone","ShowConfirmPhone","handleChangeDOB","date","userInforViewModel","ConfirmEmail","ConfirmPhone","placeholderText","dateFormat","selected","App","Switch","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","usePromiseTracker","promiseInProgress","style","width","height","display","justifyContent","alignItems","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b00f6f80.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true\r\n        };\r\n    }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        }); \r\n    }\r\n\r\n    handleSignOut = () =>{\r\n        localStorage.removeItem('myToken')\r\n        console.log(\"session expired\")\r\n    }\r\n\r\n    render() {\r\n        let User, SignOut;\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (isLoggedIn) {\r\n            SignOut = <NavLink tag={Link} type=\"button\" onClick={this.handleSignOut} to=\"/\" className=\"btn btn-danger button-signout margin-rt10 float-rt\">Sign Out</NavLink>\r\n            User = <NavLink tag={Link} className=\"text-white float-rt mt-1 margin-rt10\" to='/UserProfile'>{localStorage.getItem(\"myUserName\")}</NavLink>\r\n        }\r\n        return (\r\n            <header>\r\n                <Navbar className=\"theme1 navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n                    \r\n                <Container>\r\n                <NavbarBrand className=\"text-black mb-4 mt-4 wrdbreak\" tag={Link} to=\"/\"><h3><b>Employee Portal</b></h3></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n                            <ul className=\"navbar-nav flex-grow ml-1\">\r\n                            \r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-black\" to=\"/\"><b>Home</b></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-black\" to=\"/Employees\"><b>Employees</b></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-black\" to=\"/Departments\"><b>Departments</b></NavLink>                                    \r\n                                </NavItem>  \r\n                            \r\n                                <NavItem className=\"d-md-none\"><div><small>{User}</small></div></NavItem>    \r\n                                <NavItem className=\"d-md-none\"><div><small>{SignOut}</small></div></NavItem>    \r\n                            </ul>\r\n                        </Collapse>                        \r\n                </Container>\r\n                <div className=\"d-none d-md-block d-lg-block  d-xl-block\"><small>{User}</small></div>\r\n                <div className=\"d-none d-md-block d-lg-block  d-xl-block\"><small>{SignOut}</small></div>\r\n                </Navbar>         \r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { trackPromise } from 'react-promise-tracker';\r\n\r\nfunction WebApi(apiUrl, data, method = 'POST', auth = true) {\r\n    let authHeader = 'Bearer ' + localStorage.getItem('myToken')\r\n\r\n    let headers = {\r\n        \"Content-Type\": 'application/json',\r\n        \"Accept\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": '*'\r\n    }\r\n    if (auth)\r\n        headers.Authorization = authHeader\r\n\r\n    let requestInfo = {\r\n        method: method,\r\n        withCredentials: true,\r\n        headers: headers\r\n    }\r\n    if (method === 'POST' || method === 'PUT')\r\n        requestInfo.body = data\r\n\r\n    return trackPromise(fetch('http://employee.service.com' + apiUrl, requestInfo).then(res => {        \r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {            \r\n            var error = res.text();\r\n            let errorStatus = res.statusText\r\n            if (errorStatus.toUpperCase() === 'UNAUTHORIZED') {\r\n                alert('Session has expired.')\r\n                localStorage.removeItem('myToken')\r\n            }\r\n            throw error;\r\n        }\r\n    }).then(result => {\r\n        return result;\r\n    }, error => {\r\n        if (error.toString() === 'TypeError: Failed to fetch') {\r\n            alert('Session has expired.')\r\n            localStorage.removeItem('myToken')\r\n        }        \r\n        return error;\r\n    }))\r\n}\r\n\r\nexport default WebApi","import React, { Component } from 'react';\r\nimport '../css/Home.css';\r\nimport WebApi from '../Helpers/WebApi';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n    constructor(params) {\r\n        super(params)\r\n        this.state = {\r\n            Username: '',\r\n            Password: '',\r\n            token: localStorage.getItem('myToken') || '',\r\n            loggedInUser: ''\r\n        };\r\n    }\r\n    \r\n    handleClick = () => {\r\n        let url = `/token`;\r\n        let data = 'username=' + this.state.Username +\r\n            '&password=' + this.state.Password + '&grant_type=password'\r\n\r\n        WebApi(url, data, 'POST', false)\r\n            .then(response => {\r\n                console.log(\"UserName:\" + response.userName)\r\n                this.setState({\r\n                    token: response.access_token,\r\n                    loggedInUser: response.userName\r\n                }, () => {\r\n                    localStorage.setItem('myToken', this.state.token)\r\n                    localStorage.setItem('myUserName', this.state.loggedInUser)\r\n                    this.props.history.push('/Employees')\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (isLoggedIn)\r\n            return (<div className=\"row justify-content-md-center\">Welcome to the Employee portal.</div>)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                        <div className=\"card card-signin my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Sign In</h5>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"email\" className=\"form-control\" placeholder=\"Username\" value={this.state.Username} onChange={(e) => { this.setState({ Username: e.target.value }) }} />\r\n                                </div>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" value={this.state.Password} onChange={(e) => { this.setState({ Password: e.target.value }) }} placeholder=\"Password\" />\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember password</label>\r\n                                </div>\r\n                                <button className=\"btn btn-lg btn-success btn-block text-uppercase\" value=\"Submit\" onClick={this.handleClick} type=\"button\">Sign in</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { format } from \"date-fns\";\r\n\r\nexport class Employees extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            employeeData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Employees`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    employeeData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.employeeData) === 'object' && this.state.employeeData && this.state.employeeData.length) {\r\n            return this.state.employeeData.slice(first, first + count).map((employee, index) => {\r\n                const { ID, FirstName, LastName, Gender, DepartmentName, DepartmentLocation, JobTitle, JoiningDate, InService } = employee //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{ID}</td>\r\n                        <td>{FirstName + \" \" + LastName}</td>\r\n                        <td>{Gender}</td>                        \r\n                        <td>{DepartmentName}</td>\r\n                        <td>{DepartmentLocation}</td>                        \r\n                        <td>{JoiningDate !==null? format(new Date(JoiningDate),\"dd MMM yyyy\"): ''}</td>\r\n                        <td>{InService === true ? \"Yes\": \"No\"}</td>\r\n                        <td>{JobTitle}</td>\r\n                        <td>\r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditEmployee',\r\n                                data: { ID }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader = () => {\r\n        let header = this.state.keys\r\n        console.log(header)\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '')\r\n                return <th key={index}></th>\r\n            if (key.toUpperCase() === \"DEPARTMENTNAME\")\r\n                return <th key={index}>DEPARTMENT</th>\r\n            if (key.toUpperCase() === \"DEPARTMENTLOCATION\")\r\n                return <th key={index}>LOCATION</th>\r\n            if (key.toUpperCase() !== \"FIRSTNAME\" && key.toUpperCase() !== \"LASTNAME\" && key.toUpperCase() !== \"DEPARTMENTID\" && key.toUpperCase() !== \"SALARY\"  && key.toUpperCase() !== \"LEAVINGDATE\")\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            if (key.toUpperCase() === \"FIRSTNAME\")\r\n                return <th key={index}>NAME</th>\r\n            return null\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddEmployee = () => {\r\n        this.props.history.push('/AddEmployee')\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        return (<div className=\"container\">\r\n            <div className=\"table-wrapper\">\r\n                <div className=\"table-title\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-8\"><h2>Employee <b>Details</b></h2></div>\r\n                        <div className=\"col-sm-4\">\r\n                            <button type=\"button\" onClick={this.handleAddEmployee} className=\"btn btn-success add-new\"><i className=\"fa fa-plus\"></i> Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"table table-striped table-hover table-bordered border-0\">\r\n                    <thead>\r\n                        <tr className=\"bg-secondary\">\r\n                            {this.renderTableHeader()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData(this.state.firstRow, this.state.currentPageRows)}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"clearfix\">\r\n                    <div className=\"hint-text\">Showing <b>{this.state.currentPageRows}</b> out of <b>{this.state.totalRows}</b> entries</div>\r\n                    <ul className=\"pagination\">\r\n                        <li className={\"page-item \" + (this.state.activePage === 1 ? \"disabled\" : \"\")}>\r\n                            <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                <i className=\"fa fa-angle-double-left\"></i>\r\n                            </a>\r\n                        </li>\r\n                        {this.renderPagination()}\r\n                        <li className={\"page-item \" + (this.state.activePage === this.state.noOfPages ? \"disabled\" : \"\")}>\r\n                            <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                <i className=\"fa fa-angle-double-right\"></i>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Employees\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class Departments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            departmentData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    departmentData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.departmentData) === 'object' && this.state.departmentData && this.state.departmentData.length) {\r\n            return this.state.departmentData.slice(first, first + count).map((department, index) => {\r\n                const { ID, Name, Location } = department //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{ID}</td>\r\n                        <td>{Name}</td>\r\n                        <td>{Location}</td>\r\n                        <td>\r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditDepartment',\r\n                                data: { ID }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader() {\r\n        let header = this.state.keys\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '') {\r\n                return <th key={index}></th>\r\n            }\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddDepartment = () => {\r\n        this.props.history.push('/AddDepartment')\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"table-wrapper\">\r\n                    <div className=\"table-title\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-8\"><h2>Department <b>Details</b></h2></div>\r\n                            <div className=\"col-sm-4\">\r\n                                <button type=\"button\" onClick={this.handleAddDepartment} className=\"btn btn-success add-new\">\r\n                                    <i className=\"fa fa-plus\"></i> Add New\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"table table-striped table-hover table-bordered\">\r\n                        <thead>\r\n                            <tr className=\"bg-secondary\">\r\n                                {this.renderTableHeader()}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTableData(this.state.firstRow, this.state.currentPageRows)}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"clearfix\">\r\n                        <div className=\"hint-text\">Showing <b>{this.state.currentPageRows}</b> out of <b>{this.state.totalRows}</b> entries</div>\r\n                        <ul className=\"pagination\">\r\n                            <li className={\"page-item \" + (this.state.activePage === 1 ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-left\"></i>\r\n                                </a>\r\n                            </li>\r\n                            {this.renderPagination()}\r\n                            <li className={\"page-item \" + (this.state.activePage === this.state.noOfPages ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-right\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Departments\r\n","import React from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nfunction AlertMessage(props) {\r\n    const { message, type, visible } = props\r\n    let className\r\n    if (!visible)\r\n        className = \"d-none\"\r\n\r\n    return (\r\n        <div className={className}>\r\n        <div className=\"col-lg-2\"></div>\r\n            <div className=\"col-sm-5 col-5 col-md-5 col-lg-8 margin-top-75\">\r\n                <Alert className=\"txt-center opacity-100\" color={type}> {message} </Alert>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertMessage\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class AddDepartment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Name: '',\r\n            Location: '',\r\n            token: localStorage.getItem('myToken') || '',\r\n            showAlert: false,\r\n            alertType: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.Name === '' || this.state.Location === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n        let url = `/api/Departments`\r\n        let data = JSON.stringify({\r\n            \"ID\": 0,\r\n            \"Name\": this.state.Name,\r\n            \"Location\": this.state.Location\r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                this.setState({ showAlert: true, alertType: 'success', Name: '', Location: '' })\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const { Name, Location, showAlert, alertType } = this.state\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n        const SuccessMessage = \"Department has been added successfully.\"\r\n        const ErrorMessage = \"Name and Location fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\")\r\n            Message = ErrorMessage\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Add - Department</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department name</label>\r\n                            </div>\r\n                            <input value={Name} onChange={(e) => { this.setState({ Name: e.target.value, successAlert: false, errorAlert: false }) }} className=\"mt-1\" type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Location</label>\r\n                            </div>\r\n                            <input value={Location} onChange={(e) => { this.setState({ Location: e.target.value, successAlert: false, errorAlert: false }) }} className=\"mt-1\" type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" onClick={this.handleSubmit} type=\"button\" value=\"Save\" />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddDepartment\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class EditDepartment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Name: '',\r\n            Location: '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: '',\r\n            readOnly: false\r\n        }\r\n        this.id = 0;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.id !== 0) {\r\n            let url = `/api/Departments/` + this.id\r\n            WebApi(url, '', 'GET')\r\n                .then(response => {\r\n                    this.setState({ Name: response.Name, Location: response.Location })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.readOnly) {\r\n            this.setState({ readOnly: false, showAlert: false, alertType: \"\" })\r\n        }\r\n        else {\r\n            if (this.state.Name === '' || this.state.Location === '') {\r\n                return this.setState({ showAlert: true, alertType: \"danger\" })\r\n            }\r\n            let url = `/api/Departments/` + this.id\r\n            let data = JSON.stringify({\r\n                \"ID\": this.id,\r\n                \"Name\": this.state.Name,\r\n                \"Location\": this.state.Location\r\n            })\r\n            WebApi(url, data, 'PUT')\r\n                .then(response => {\r\n                    if (response.Message && response.Message.toUpperCase() === \"SUCCESS\")\r\n                        this.setState({ showAlert: true, alertType: 'success', readOnly: true })\r\n                    else\r\n                        return this.setState({ showAlert: true, alertType: \"danger\", message: \"Some error occured, please try again.\" })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const { Name, Location, showAlert, alertType, message, readOnly } = this.state\r\n        const IsLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!IsLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.ID)\r\n            this.id = this.props.location.data.ID\r\n\r\n        const SuccessMessage = \"Department has been edited successfully.\"\r\n        const ErrorMessage = \"Name and Location fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container className=\"border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit - Department</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department name</label>\r\n                            </div>\r\n                            <input value={Name} onChange={(e) => { this.setState({ Name: e.target.value }) }} className={\"mb-1 \" + (readOnly === true ? \"disabled-inputs\" : \"\")} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Location</label>\r\n                            </div>\r\n                            <input value={Location} onChange={(e) => { this.setState({ Location: e.target.value }) }} className={\"mb-1 \" + (readOnly === true ? \"disabled-inputs\" : \"\")} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" onClick={this.handleSubmit} type=\"button\" value={(readOnly === true ? \"Edit\" : \"Update\")} />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditDepartment\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class AddEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            departmentOptions: [],\r\n            fName: '',\r\n            lName: '',\r\n            gender: '',\r\n            salary: '',\r\n            departmentId: '',\r\n            jobTitle: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                const departments = response.map((dep, index) => <option key={index + 1} value={dep.ID}>{dep.Name}\r\n                    ({dep.Location}) </option>)\r\n                this.setState({ departmentOptions: departments }, () => {\r\n                });\r\n            });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.fName === '' || this.state.lName === '' || this.state.DepartmentId === 'select'\r\n            || this.state.gender === 'select' || this.state.salary === '' || this.state.jobTitle === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n        let url = `/api/Employees`\r\n        let data = JSON.stringify({\r\n            \"ID\": 0,\r\n            \"DepartmentId\": this.state.departmentId,\r\n            \"FirstName\": this.state.fName,\r\n            \"LastName\": this.state.lName,\r\n            \"Gender\": this.state.gender,\r\n            \"Salary\": this.state.salary,\r\n            \"JobTitle\": this.state.jobTitle,                        \r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    showAlert: true, alertType: 'success', departmentId: 'select',\r\n                    fName: '', lName: '', gender: '', salary: '', jobTitle: ''\r\n                })\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const GenderOptions = [<option key=\"1\" value=\"Male\">Male</option>,\r\n        <option key=\"2\" value=\"Female\">Female</option>];\r\n        const IsLoggedIn = localStorage.getItem(\"myToken\");\r\n        const { fName, lName, gender, salary, departmentId, jobTitle, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Employee has been added successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\")\r\n            Message = ErrorMessage\r\n\r\n        if (!IsLoggedIn)\r\n            return <Redirect to='/' />\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Add - Employee</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>First name</label>\r\n                            </div>\r\n                            <input type=\"text\" value={fName} onChange={(e) => { this.setState({ fName: e.target.value }) }}></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Last name</label>\r\n                            </div>\r\n                            <input type=\"text\" value={lName} onChange={(e) => { this.setState({ lName: e.target.value }) }}></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <select value={gender} onChange={(e) => { this.setState({ gender: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{GenderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Salary</label>\r\n                            </div>\r\n                            <input value={salary} onChange={(e) => { this.setState({ salary: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Department</label>\r\n                            </div>\r\n                            <select value={departmentId} onChange={(e) => { this.setState({ departmentId: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{this.state.departmentOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Job Title</label>\r\n                            </div>\r\n                            <input value={jobTitle} onChange={(e) => { this.setState({ jobTitle: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-5\"></div>\r\n                            <input className=\"btn btn-success mr-1\" value=\"Save\" onClick={this.handleSubmit} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEmployee\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class EditEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showAlert: false,\r\n            alertType: '',\r\n            departmentOptions: [],\r\n            fName: '',\r\n            lName: '',\r\n            gender: '',\r\n            salary: '',\r\n            departmentId: '',\r\n            jobTitle: '',\r\n            joiningDate: '',\r\n            id: 0,\r\n            message: '',\r\n            readOnly: false\r\n        }\r\n        this.id = 0\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                if (response) {\r\n                    const departments = response.map((dep, index) => <option key={index + 1} value={dep.ID}>{dep.Name} ({dep.Location}) </option>)\r\n                    this.setState({ departmentOptions: departments }, () => {\r\n                    });\r\n                }\r\n            });\r\n\r\n        if (this.id !== 0) {\r\n            url = `/api/Employees/` + this.id\r\n            WebApi(url, '', 'GET')\r\n                .then(response => {\r\n                    console.log(response)\r\n                    if (response) {\r\n                        this.setState({\r\n                            fName: response.FirstName, lName: response.LastName, gender: response.Gender, salary: response.Salary,\r\n                            departmentId: response.DepartmentId, jobTitle: response.JobTitle, joiningDate: response.JoiningDate\r\n                        })\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.readOnly) {\r\n            this.setState({ readOnly: false, showAlert: false, alertType: \"\" })\r\n        }\r\n        else {\r\n            if (this.state.DepartmentId === 'select' || this.state.salary === '' || this.state.jobTitle === '') {\r\n                return this.setState({ showAlert: true, alertType: \"danger\" })\r\n            }\r\n            let url = `/api/Employees/` + this.id\r\n            let data = JSON.stringify({\r\n                \"ID\": this.id,\r\n                \"DepartmentId\": this.state.departmentId,\r\n                \"FirstName\": this.state.fName,\r\n                \"LastName\": this.state.lName,\r\n                \"Gender\": this.state.gender,\r\n                \"Salary\": this.state.salary,\r\n                \"JobTitle\": this.state.jobTitle,\r\n                \"JoiningDate\": this.state.joiningDate\r\n            })\r\n            WebApi(url, data, 'PUT')\r\n                .then(response => {\r\n                    if (response.Message && response.Message.toUpperCase() === \"SUCCESS\")\r\n                        this.setState({\r\n                            showAlert: true, alertType: 'success', readOnly: true\r\n                        })\r\n                    else {\r\n                        console.log(response)\r\n                        return this.setState({ showAlert: true, alertType: \"danger\", message: \"Some error occured, please try again.\" })\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render(props) {\r\n        const IsLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!IsLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.ID)\r\n            this.id = this.props.location.data.ID\r\n\r\n        const { fName, lName, gender, salary, departmentId, jobTitle, showAlert, alertType, message, readOnly } = this.state\r\n        const SuccessMessage = \"Employee data has been edited successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit - Employee</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Employee name</label>\r\n                            </div>\r\n                            <label>{fName} {lName}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <label>{gender}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Salary</label>\r\n                            </div>\r\n                            <input className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={salary} onChange={(e) => { this.setState({ salary: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Department</label>\r\n                            </div>\r\n                            <select className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={departmentId} onChange={(e) => { this.setState({ departmentId: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{this.state.departmentOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Job Title</label>\r\n                            </div>\r\n                            <input className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={jobTitle} onChange={(e) => { this.setState({ jobTitle: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-5\"></div>\r\n                            <input className=\"btn btn-success mr-1\" value={(readOnly === true ? \"Edit\" : \"Update\")} onClick={() => this.handleSubmit()} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEmployee\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            UserId: '',\r\n            UserName: localStorage.getItem(\"myUserName\"),\r\n            Email: '',\r\n            FirstName: '',\r\n            LastName: '',\r\n            Gender: '',\r\n            DOB: '',\r\n            Phone: '',            \r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Account/UserInfo`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {                \r\n                if (response.UserId) {\r\n                    this.setState({\r\n                        UserId: response.UserId,\r\n                        Email: response.Email,\r\n                        Phone: response.Phone\r\n                    }, () => {\r\n                        url = `/api/AspNetUserInfoes/` + this.state.UserId\r\n                        WebApi(url, '', 'GET')\r\n                            .then(resp => {                                \r\n                                if (resp.length && resp.length > 0) {                                    \r\n                                    this.setState({\r\n                                        FirstName: resp[0].FirstName,\r\n                                        LastName: resp[0].LastName,\r\n                                        Gender: resp[0].Gender,\r\n                                        DOB: resp[0].DOB\r\n                                    })\r\n                                }\r\n                            })\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleEditUser = () =>{\r\n        this.props.history.push('/EditUserProfile')\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n                    \r\n        return (\r\n            <div>\r\n                <Container className=\"border\">\r\n                    <div className=\"row  p-2\">\r\n                        <h4 className=\"mt-2 mb-5 col-11\">\r\n                            <b>User Profile</b>\r\n                        </h4>\r\n                        <div className=\"col-1\">\r\n                        <button type=\"button\" onClick={this.handleEditUser} className=\"btn btn-success add-new mt-1 float-rt\">Edit</button>                            \r\n                        </div>\r\n                    </div>\r\n                    <form>\r\n                    <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Username</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.UserName}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Name</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">\r\n                                {this.state.FirstName} {this.state.LastName}\r\n                            </label>\r\n                        </div>                        \r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Email</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.Email}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Phone</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.Phone}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.Gender}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Date of Birth</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.DOB}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                            </div>\r\n                            <Link to='/ChangePassword' className=\"mt-1\">Change Password</Link>\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class NotFoundPage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<h1>Page Not Found</h1>\r\n\t\t\t<p>Sorry, there is nothing to see here.</p>\r\n\t\t\t<p><Link to=\"/\">Back to Home</Link></p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default NotFoundPage\r\n","function ParseError(error) {\r\n    try {\r\n        if (error !== '') {\r\n            let parsedError = JSON.parse(error);\r\n            if (parsedError.ModelState !== null) {\r\n                let modelState = parsedError.ModelState;\r\n                if (Object.getOwnPropertyNames(modelState) !== null) {\r\n                    let modelStateArr = Object.getOwnPropertyNames(modelState)\r\n                    if (modelStateArr[0] === '')\r\n                        return modelState[''][0]\r\n                    else if (modelStateArr[0] === 'model.ConfirmPassword')\r\n                        return modelState['model.ConfirmPassword'][0]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (exception) {\r\n        return 'Some error occured, please try again'\r\n    }\r\n}\r\n\r\nexport default ParseError\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport ParseError from '../../Helpers/ParseError';\r\nimport AlertMessage from '../../AlertMessage';\r\n\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.oldPassword === '' || this.state.newPassword === '' || this.state.confirmPassword === '')\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        let url = `/api/Account/ChangePassword`\r\n        let data = JSON.stringify({\r\n            \"OldPassword\": this.state.oldPassword,\r\n            \"NewPassword\": this.state.newPassword,\r\n            \"ConfirmPassword\": this.state.confirmPassword\r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then((response) => {\r\n                if (response.Message && response.Message.toUpperCase() === \"SUCCESS\") {\r\n                    return this.setState({ showAlert: true, alertType: 'success', })\r\n                }\r\n                else {\r\n                    return this.setState({ showAlert: true, alertType: \"danger\", message: ParseError(response) })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n        const { confirmPassword, newPassword, oldPassword, message, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Password has been changed successfully.\"\r\n        const ErrorMessage = \"OldPassword, NewPassword and ConfirmPassword fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h5 className=\"mt-2 mb-5\"><b>Change Password</b></h5>\r\n                    <form>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"><label>Old Password</label></div><input value={oldPassword}\r\n                            onChange={(e) => this.setState({ oldPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input></div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"><label>New Password</label></div><input value={newPassword}\r\n                            onChange={(e) => this.setState({ newPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input></div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"><label>Confirm New Password</label></div><input value={confirmPassword}\r\n                            onChange={(e) => this.setState({ confirmPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input></div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"></div><input className=\"btn btn-success mr-2\" value=\"Submit\" onClick={this.handleSubmit} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" /></div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport AlertMessage from '../../AlertMessage';\r\n\r\nexport class EditUserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            UserId: '',\r\n            Id: '',\r\n            UserName: localStorage.getItem(\"myUserName\"),\r\n            Email: '',\r\n            ConfirmEmail: '',\r\n            FirstName: '',\r\n            LastName: '',\r\n            Gender: '',\r\n            DOB: '',\r\n            Phone: '',\r\n            ConfirmPhone: '',\r\n            ShowConfirmEmail: false,\r\n            ShowConfirmPhone: false,\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: '',\r\n        }\r\n\r\n        this.prevEmail = ''\r\n        this.prevPhone = ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Account/UserInfo`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                if (response.UserId) {\r\n                    this.setState({\r\n                        UserId: response.UserId ? response.UserId : \"\",\r\n                        Email: response.Email ? response.Email : \"\",\r\n                        Phone: response.Phone ? response.Phone : \"\"\r\n                    }, () => {\r\n                        url = `/api/AspNetUserInfoes/` + this.state.UserId\r\n                        WebApi(url, '', 'GET')\r\n                            .then(response => {\r\n                                this.prevEmail = this.state.Email\r\n                                this.prevPhone = this.state.Phone\r\n                                if (response.length && response.length > 0) {\r\n                                    this.setState({\r\n                                        Id: response[0].Id,\r\n                                        FirstName: response[0].FirstName,\r\n                                        LastName: response[0].LastName,\r\n                                        Gender: response[0].Gender,\r\n                                        DOB: response[0].DOB !== null ? new Date(response[0].DOB) : ''\r\n                                    })\r\n\r\n                                }\r\n                            })\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleChangeEmail = (e) => {\r\n        this.setState({ Email: e.target.value }, () => {\r\n            if (this.state.Email !== this.prevEmail) {\r\n                this.setState({ ShowConfirmEmail: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmEmail: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ Phone: e.target.value }, () => {\r\n            if (this.state.Phone !== this.prevPhone) {\r\n                this.setState({ ShowConfirmPhone: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmPhone: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeDOB = date => {\r\n        this.setState({\r\n            DOB: date\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.FirstName === '' || this.state.LastName === '' || this.state.Gender === 'select'\r\n            || this.state.DOB === '' || this.state.Phone === '' || this.state.Email === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n\r\n        let userInforViewModel =\r\n        {\r\n            \"UserId\": this.state.UserId,\r\n            \"UserName\": this.state.UserName,\r\n            \"Email\": this.state.Email,\r\n            \"Phone\": this.state.Phone\r\n\r\n        }\r\n        if (!this.state.ShowConfirmEmail) {\r\n            userInforViewModel[\"ConfirmEmail\"] = this.state.Email\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmEmail\"] = this.state.ConfirmEmail\r\n\r\n        if (!this.state.ShowConfirmPhone) {\r\n            userInforViewModel[\"ConfirmPhone\"] = this.state.Phone\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmPhone\"] = this.state.ConfirmPhone\r\n\r\n        let url = `/api/AspNetUserInfoes/` + this.state.UserId\r\n        let data = JSON.stringify({\r\n            \"Id\": this.state.Id,\r\n            \"FirstName\": this.state.FirstName,\r\n            \"LastName\": this.state.LastName,\r\n            \"Gender\": this.state.Gender,\r\n            \"DOB\": this.state.DOB,\r\n            \"UsersId\": this.state.UserId,\r\n            \"userInfoViewModel\": userInforViewModel\r\n        })\r\n        WebApi(url, data, 'PUT')\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.Message && response.Message === 'SUCCESS')\r\n                    //  this.setState({\r\n                    //   showAlert: true, alertType: 'success', message: response\r\n                    //  });\r\n                    this.props.history.push('/UserProfile')\r\n                else\r\n                    this.setState({\r\n                        showAlert: true, alertType: 'danger', message: response\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        const GenderOptions = [<option key=\"1\" value=\"Male\">Male</option>,\r\n        <option key=\"2\" value=\"Female\">Female</option>];\r\n\r\n        const { Email, FirstName, LastName, Gender, DOB, Phone, ConfirmPhone, ConfirmEmail, showAlert, alertType, message } = this.state\r\n\r\n        const SuccessMessage = \"User Profile has been edited successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container className=\"border\">\r\n\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit - User Profile</b>\r\n                    </h4>\r\n\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Username</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.UserName}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>First Name</label>\r\n                            </div>\r\n                            <input value={FirstName} onChange={(e) => { this.setState({ FirstName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Last Name</label>\r\n                            </div>\r\n                            <input value={LastName} onChange={(e) => { this.setState({ LastName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Email</label>\r\n                            </div>\r\n                            <input value={Email} onChange={(e) => this.handleChangeEmail(e)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmEmail === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Email</label>\r\n                            </div>\r\n                            <input value={ConfirmEmail} onChange={(e) => { this.setState({ ConfirmEmail: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Phone</label>\r\n                            </div>\r\n                            <input value={Phone} onChange={(e) => this.handleChangePhone(e)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmPhone === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Phone</label>\r\n                            </div>\r\n                            <input value={ConfirmPhone} onChange={(e) => { this.setState({ ConfirmPhone: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <select value={Gender} onChange={(e) => { this.setState({ Gender: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{GenderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Date of Birth</label>\r\n                            </div>\r\n                            <DatePicker placeholderText=\"dd/MM/yyyy\" dateFormat=\"dd/MM/yyyy\" selected={DOB} onChange={this.handleChangeDOB} />\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                            </div>\r\n                            <input className=\"btn btn-success mr-1\" value=\"Save\" onClick={() => this.handleSubmit()} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserProfile\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Pages/Home';\r\nimport { Employees } from './components/Pages/Employee/Employees';\r\nimport { Departments } from './components/Pages/Department/Departments';\r\nimport { AddDepartment } from './components/Pages/Department/AddDepartment';\r\nimport { EditDepartment } from './components/Pages/Department/EditDepartment';\r\nimport { AddEmployee } from './components/Pages/Employee/AddEmployee';\r\nimport { EditEmployee } from './components/Pages/Employee/EditEmployee';\r\nimport { UserProfile } from './components/Pages/User/UserProfile';\r\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\r\nimport { ChangePassword } from './components/Pages/User/ChangePassword';\r\nimport { EditUserProfile } from './components/Pages/User/EditUserProfile';\r\nimport './components/css/Global.css';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact={true} path='/' component={Home} />\r\n          <Route exact={true} path='/Employees' component={Employees} />\r\n          <Route exact={true} path='/Departments' component={Departments} />\r\n          <Route exact={true} path='/AddDepartment' component={AddDepartment} />\r\n          <Route exact={true} path='/EditDepartment' component={EditDepartment} />\r\n          <Route exact={true} path='/AddEmployee' component={AddEmployee} />\r\n          <Route exact={true} path='/EditEmployee' component={EditEmployee} />\r\n          <Route exact={true} path='/UserProfile' component={UserProfile} />\r\n          <Route exact={true} path='/ChangePassword' component={ChangePassword} />\r\n          <Route exact={true} path='/EditUserProfile' component={EditUserProfile} />\r\n          <Route path='/*' component={NotFoundPage} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst LoadingIndicator = props => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n    promiseInProgress &&\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"70\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\", alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Loader type=\"ThreeDots\" color=\"#2BAD60\" height={70} width={70} />    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <div>\r\n      <App />\r\n      <LoadingIndicator />\r\n    </div>\r\n  </BrowserRouter>,\r\n\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}