{"version":3,"sources":["components/Helpers/RequireAuth.js","components/NavMenu.js","components/Layout.js","components/AlertMessage.js","components/Helpers/WebApi.js","components/Pages/Department/AddDepartment.js","components/Pages/Department/Departments.js","components/Pages/Department/EditDepartment.js","components/Pages/Employee/AddEmployee.js","components/Pages/Employee/EditEmployee.js","components/Pages/Employee/Employees.js","components/Pages/Home.js","components/Pages/NotFoundPage.js","components/Helpers/ParseError.js","components/Pages/User/ChangePassword.js","components/Pages/User/CreateUser.js","components/Pages/User/EditUserProfile.js","components/SideBar.js","components/Pages/User/UserProfile.js","components/Pages/User/Users.js","App.js","registerServiceWorker.js","index.js"],"names":["RequireAuth","Component","localStorage","getItem","this","props","Redirect","to","NavMenu","toggleNavbar","setState","collapsed","state","IsButtonClicked","handleSignOut","removeItem","console","log","bind","User","SignOut","isLoggedIn","tag","Link","type","onClick","className","light","isOpen","navbar","nav","inNavbar","prev","displayName","name","Layout","children","AlertMessage","message","visible","color","WebApi","apiUrl","data","method","auth","authHeader","headers","Authorization","requestInfo","withCredentials","body","trackPromise","fetch","then","res","ok","json","error","text","statusText","toUpperCase","alert","result","toString","AddDepartment","handleSubmit","Name","Location","showAlert","alertType","JSON","stringify","response","handleBack","history","goBack","token","Message","value","onChange","e","target","successAlert","errorAlert","Departments","componentDidMount","totalRows","length","noOfPages","parseInt","pageRows","lastPageRows","departmentData","keys","Object","renderTableData","first","count","slice","map","department","index","ID","key","title","pathname","data-toggle","handleChangePage","k","preventDefault","firstRow","currentPageRows","activePage","renderPagination","pagination","j","push","href","handleForwardPage","persist","prevState","handleBackwardPage","handleAddDepartment","header","pop","renderTableHeader","EditDepartment","user","id","hydrateStateWithLocalStorage","url","saveStateToLocalStorage","readOnly","isBlocking","handlePrompt","setItem","parse","location","Prompt","when","AddEmployee","departments","dep","departmentOptions","fName","lName","DepartmentId","gender","salary","jobTitle","departmentId","GenderOptions","EditEmployee","FirstName","LastName","Gender","Salary","JobTitle","joiningDate","JoiningDate","Employees","employeeData","employee","DepartmentName","DepartmentLocation","InService","format","Date","handleAddEmployee","Home","params","handleClick","Username","Password","userName","access_token","loggedInUser","placeholder","htmlFor","NotFoundPage","ParseError","parsedError","ModelState","modelState","getOwnPropertyNames","modelStateArr","exception","ChangePassword","UserId","UserName","newPassword","confirmPassword","oldPassword","dataObject","UsersId","CreateUser","handleChangeEmail","Email","prevEmail","ShowConfirmEmail","handleChangePhone","Phone","prevPhone","ShowConfirmPhone","handleChangePassword","prevPassword","ShowConfirmPassword","handleChangeDOB","date","DOB","userInforViewModel","NewUserName","ConfirmPassword","ConfirmEmail","ConfirmPhone","moment","placeholderText","dateFormat","selected","EditUserProfile","Id","NavLink","icon","label","Chevron","expanded","Icon","SideBar","menuItems","items","linkComponent","chevronComponent","iconComponent","style","minHeight","UserProfile","link","resp","handleEditUser","fluid","Users","userData","handleAddUser","App","Switch","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","LoadingIndicator","usePromiseTracker","promiseInProgress","width","height","display","justifyContent","alignItems","ReactDOM","render","BrowserRouter","basename","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5d9d15b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst RequireAuth = (Component) => { \r\n\r\n    return class App extends Component { \r\n        render() { \r\n            const IsLoggedIn = localStorage.getItem('myToken'); \r\n            if(!IsLoggedIn) { \r\n                return <Redirect to='/' />\r\n            } \r\n            \r\n           return <Component {...this.props} /> \r\n        }\r\n    } \r\n\r\n} \r\n\r\nexport { RequireAuth }","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true,\r\n            IsButtonClicked: false\r\n        };\r\n    }\r\n\r\n    toggleNavbar = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n            IsButtonClicked: true\r\n        });\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        localStorage.removeItem('myToken')\r\n        console.log(\"session expired\")\r\n    }\r\n\r\n    static getDerivedStateFromProps(state, prev) {\r\n        if (!prev.collapsed && !prev.IsButtonClicked) {\r\n            return { collapsed: true }\r\n        }\r\n        return { collapsed: prev.collapsed, IsButtonClicked: false }\r\n    }\r\n\r\n    render() {\r\n        let User, SignOut;\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n\r\n        SignOut = <NavLink tag={Link} type=\"button\" onClick={this.handleSignOut} to=\"/\" className=\"btn btn-danger button-signout margin-rt10 float-rt\">Sign Out</NavLink>\r\n        User = <NavLink tag={Link} className=\"text-white float-rt mt-1 margin-rt10 margin-rt20\" to='/UserProfile'>{localStorage.getItem(\"myUserName\")}</NavLink>\r\n\r\n        return (\r\n            <header>\r\n                <Navbar className=\"theme1 navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n                    <Container className=\"justifycontent-normal container-width\">\r\n                        <NavbarBrand className=\"text-black mb-4 mt-4 wrdbreak\" tag={Link} to=\"/\">\r\n                            <h3>\r\n                                <b>Employee Portal</b>\r\n                            </h3>\r\n                        </NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2 marginleft55 marginleft40\" />\r\n                        <Collapse className={\"d-sm-inline-flex flex-sm-row-reverse boxshadow \" + (!isLoggedIn?\"d-none\":\"\")} isOpen={!this.state.collapsed} navbar>\r\n                            <ul className={\"navbar-nav flex-grow ml-1 \" + (!isLoggedIn?\"d-none\":\"\")}>\r\n\r\n                                <NavItem className=\"text-black padding-5\">\r\n                                    <NavLink tag={Link} className=\"text-black d-none d-md-block d-lg-block d-xl-block\" to=\"/\"><b>Home</b></NavLink>\r\n                                    <NavLink tag={Link} className=\"text-black d-md-none\" onClick={this.toggleNavbar} to=\"/\"><b>Home</b></NavLink>\r\n                                </NavItem>\r\n                                <UncontrolledDropdown className=\"text-black padding-5\" nav inNavbar>\r\n                                    <DropdownToggle nav>\r\n                                        <b>Employee Management</b>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu className=\"theme1\">\r\n                                        <DropdownItem className=\"theme1\">\r\n                                            <NavItem>\r\n                                                <NavLink tag={Link} className=\"text-black d-none d-md-block d-lg-block d-xl-block\" to=\"/Employees\"><b>Employees</b></NavLink>\r\n                                                <NavLink tag={Link} className=\"text-black d-md-none\" onClick={this.toggleNavbar} to=\"/Employees\"><b>Employees</b></NavLink>\r\n                                            </NavItem>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem className=\"theme1\">\r\n                                            <NavItem>\r\n                                                <NavLink tag={Link} className=\"text-black d-none d-md-block d-lg-block d-xl-block\" to=\"/Departments\"><b>Departments</b></NavLink>\r\n                                                <NavLink tag={Link} className=\"text-black d-md-none\" onClick={this.toggleNavbar} to=\"/Departments\"><b>Departments</b></NavLink>\r\n                                            </NavItem>\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                                <UncontrolledDropdown className=\"text-black padding-5\" nav inNavbar>\r\n                                    <DropdownToggle nav>\r\n                                        <b>User Manager</b>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu className=\"theme1\">\r\n                                        <DropdownItem className=\"theme1\">\r\n                                            <NavItem className=\"text-black padding-5\">\r\n                                                <NavLink tag={Link} className=\"text-black d-none d-md-block d-lg-block d-xl-block\" to=\"/Users\"><b>Users</b></NavLink>\r\n                                                <NavLink tag={Link} className=\"text-black d-md-none\" onClick={this.toggleNavbar} to=\"/Users\"><b>Users</b></NavLink>\r\n                                            </NavItem>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem className=\"theme1\">\r\n                                            <NavItem className=\"text-black padding-5\">\r\n                                                <NavLink tag={Link} className=\"text-black d-none d-md-block d-lg-block d-xl-block\" to=\"/CreateUser\"><b>Create User</b></NavLink>\r\n                                                <NavLink tag={Link} className=\"text-black d-md-none\" onClick={this.toggleNavbar} to=\"/CreateUser\"><b>Create User</b></NavLink>\r\n                                            </NavItem>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem className=\"theme1\">\r\n                                            <NavItem className=\"text-black padding-5\">\r\n                                                <NavLink tag={Link} className=\"text-black d-none d-md-block d-lg-block d-xl-block\" to=\"/ChangePassword\"><b>Change Password</b></NavLink>\r\n                                                <NavLink tag={Link} className=\"text-black d-md-none\" onClick={this.toggleNavbar} to=\"/ChangePassword\"><b>Change Password</b></NavLink>\r\n                                            </NavItem>\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                                <NavItem className=\"d-md-none\">\r\n                                    <div><small>{User}</small></div>\r\n                                </NavItem>\r\n                                <NavItem className=\"d-md-none\">\r\n                                    <div><small>{SignOut}</small></div>\r\n                                </NavItem>\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Container>\r\n                    <div className={(!isLoggedIn?\"d-none\":\"\")}>\r\n                        <div className=\"d-none d-md-block d-lg-block d-xl-block\"><small>{User}</small></div>\r\n                        <div className=\"d-none d-md-block d-lg-block d-xl-block\"><small>{SignOut}</small></div>\r\n                    </div>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavMenu/>\r\n        <Container className=\"container-width\">\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nfunction AlertMessage(props) {\r\n    const { message, type, visible } = props\r\n    let className\r\n    if (!visible)\r\n        className = \"d-none\"\r\n\r\n    return (\r\n        <div className={className}>\r\n        <div className=\"col-lg-2\"></div>\r\n            <div className=\"col-12 col-lg-8 margin-top-75\">\r\n                <Alert className=\"txt-center opacity-100\" color={type}> {message} </Alert>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertMessage\r\n","import { trackPromise } from 'react-promise-tracker';\r\n\r\nfunction WebApi(apiUrl, data, method = 'POST', auth = true) {\r\n    let authHeader = 'Bearer ' + localStorage.getItem('myToken')\r\n\r\n    let headers = {\r\n        \"Content-Type\": 'application/json',\r\n        \"Accept\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": '*'\r\n    }\r\n    if (auth)\r\n        headers.Authorization = authHeader\r\n\r\n    let requestInfo = {\r\n        method: method,\r\n        withCredentials: true,\r\n        headers: headers\r\n    }\r\n    if (method === 'POST' || method === 'PUT')\r\n        requestInfo.body = data\r\n\r\n    return trackPromise(fetch('http://employee.service.com' + apiUrl, requestInfo).then(res => {        \r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {            \r\n            var error = res.text();\r\n            let errorStatus = res.statusText\r\n            if (errorStatus.toUpperCase() === 'UNAUTHORIZED') {\r\n                alert('Session has expired.')\r\n                localStorage.removeItem('myToken')\r\n            }\r\n            throw error;\r\n        }\r\n    }).then(result => {\r\n        return result;\r\n    }, error => {\r\n        if (error.toString() === 'TypeError: Failed to fetch') {\r\n            alert('Session has expired.')\r\n            localStorage.removeItem('myToken')\r\n        }        \r\n        return error;\r\n    }))\r\n}\r\n\r\nexport default WebApi","import React, { Component } from 'react';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class AddDepartment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Name: '',\r\n            Location: '',\r\n            token: localStorage.getItem('myToken') || '',\r\n            showAlert: false,\r\n            alertType: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.Name === '' || this.state.Location === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n        let url = `/api/Departments`\r\n        let data = JSON.stringify({\r\n            \"ID\": 0,\r\n            \"Name\": this.state.Name,\r\n            \"Location\": this.state.Location\r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                this.setState({ showAlert: true, alertType: 'success', Name: '', Location: '' })\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const { Name, Location, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Department has been added successfully.\"\r\n        const ErrorMessage = \"Name and Location fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\")\r\n            Message = ErrorMessage\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Add - Department</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department name</label>\r\n                            </div>\r\n                            <input value={Name} onChange={(e) => { this.setState({ Name: e.target.value, successAlert: false, errorAlert: false }) }} className=\"mt-1\" type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Location</label>\r\n                            </div>\r\n                            <input value={Location} onChange={(e) => { this.setState({ Location: e.target.value, successAlert: false, errorAlert: false }) }} className=\"mt-1\" type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" onClick={this.handleSubmit} type=\"button\" value=\"Save\" />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddDepartment\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class Departments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            departmentData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    departmentData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.departmentData) === 'object' && this.state.departmentData && this.state.departmentData.length) {\r\n            return this.state.departmentData.slice(first, first + count).map((department, index) => {\r\n                const { ID, Name, Location } = department //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{ID}</td>\r\n                        <td>{Name}</td>\r\n                        <td>{Location}</td>\r\n                        <td>\r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditDepartment',\r\n                                data: { ID }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader() {\r\n        let header = this.state.keys\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '') {\r\n                return <th key={index}></th>\r\n            }\r\n            if (key.toUpperCase() === 'ID')\r\n                return <th className=\"col1width15\" key={index}>ID</th>\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddDepartment = () => {\r\n        this.props.history.push('/AddDepartment')\r\n    }\r\n\r\n    render() {\r\n        const { totalRows, currentPageRows, firstRow, activePage, noOfPages } = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"table-wrapper\">\r\n                    <div className=\"table-title\">\r\n                        <div className=\"row nowrap\">\r\n                            <div className=\"col-sm-8\"><h2>Department <b>Details</b></h2></div>\r\n                            <div className=\"col-sm-4\">\r\n                                <button type=\"button\" onClick={this.handleAddDepartment} className=\"btn btn-success add-new\">\r\n                                    <i className=\"fa fa-plus\"></i> Add New\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"table table-striped table-hover table-bordered tablemobileoverflowx\">\r\n                        <thead>\r\n                            <tr className=\"bg-secondary\">\r\n                                {this.renderTableHeader()}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTableData(firstRow, currentPageRows)}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"clearfix\">\r\n                        <div className=\"hint-text\">Showing <b>{totalRows > currentPageRows ? currentPageRows : totalRows}</b> out of <b>{totalRows}</b> entries</div>\r\n                        <ul className=\"pagination\">\r\n                            <li className={\"page-item \" + (activePage === 1 ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-left\"></i>\r\n                                </a>\r\n                            </li>\r\n                            {this.renderPagination()}\r\n                            <li className={\"page-item \" + (activePage === noOfPages ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-right\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Departments\r\n","import React, { Component } from 'react';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\nimport { Prompt, Redirect } from \"react-router-dom\";\r\nexport class EditDepartment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Name: '',\r\n            Location: '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: '',\r\n            readOnly: false,\r\n            isBlocking: false\r\n        }\r\n        this.id = 0;\r\n    }\r\n\r\n    saveStateToLocalStorage() {\r\n        const user = localStorage.getItem(\"myUserName\")\r\n        // for every item in React state\r\n        for (let key in this.state) {\r\n            // save to localStorage\r\n            localStorage.setItem(key + user, JSON.stringify(this.state[key]));\r\n        }\r\n\r\n        localStorage.setItem(\"id\" + user, this.id);\r\n    }\r\n\r\n    hydrateStateWithLocalStorage() {\r\n        const user = localStorage.getItem(\"myUserName\")\r\n        // for every item in React state\r\n        this.setState({\r\n            Name: JSON.parse(localStorage.getItem(\"Name\" + user)), Location: JSON.parse(localStorage.getItem(\"Location\" + user)),\r\n            showAlert: JSON.parse(localStorage.getItem(\"showAlert\" + user)), alertType: JSON.parse(localStorage.getItem(\"alertType\" + user)),\r\n            message: JSON.parse(localStorage.getItem(\"message\" + user)), readOnly: JSON.parse(localStorage.getItem(\"readOnly\" + user)),\r\n            isBlocking: JSON.parse(localStorage.getItem(\"isBlocking\" + user))\r\n        });\r\n\r\n        this.id = localStorage.getItem(\"id\" + user)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const user = localStorage.getItem(\"myUserName\")\r\n        if (this.id !== 0 && !localStorage.getItem(\"id\" + user)) {\r\n            let url = `/api/Departments/` + this.id\r\n            WebApi(url, '', 'GET')\r\n                .then(response => {\r\n                    this.setState({ Name: response.Name, Location: response.Location }\r\n                        , () => this.saveStateToLocalStorage()\r\n                    )\r\n                });\r\n        }\r\n        else {\r\n            this.hydrateStateWithLocalStorage();\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.readOnly) {\r\n            this.setState({ readOnly: false, showAlert: false, alertType: \"\" })\r\n        }\r\n        else {\r\n            if (this.state.Name === '' || this.state.Location === '') {\r\n                return this.setState({ showAlert: true, alertType: \"danger\" })\r\n            }\r\n            let url = `/api/Departments/` + this.id\r\n            let data = JSON.stringify({\r\n                \"ID\": this.id,\r\n                \"Name\": this.state.Name,\r\n                \"Location\": this.state.Location\r\n            })\r\n            WebApi(url, data, 'PUT')\r\n                .then(response => {\r\n                    if (response.Message && response.Message.toUpperCase() === \"SUCCESS\") {\r\n                        this.setState({ showAlert: true, alertType: 'success', readOnly: true, isBlocking: false })\r\n                    }\r\n                    else\r\n                        return this.setState({ showAlert: true, alertType: \"danger\", message: \"Some error occured, please try again.\" })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.push('/Departments')\r\n    }\r\n\r\n    handlePrompt = () => {\r\n        return `Are you sure you want to do this action, any unsaved changes may be lost`\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const user = localStorage.getItem(\"myUserName\")\r\n        // for every item in React state\r\n        for (let key in this.state) {\r\n            // save to localStorage\r\n            localStorage.removeItem(key + user)\r\n        }\r\n        localStorage.removeItem(\"id\" + user);\r\n    }\r\n\r\n    render() {\r\n        const user = localStorage.getItem(\"myUserName\")\r\n        const { Name, Location, showAlert, alertType, message, readOnly } = this.state\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.ID)\r\n            this.id = this.props.location.data.ID\r\n\r\n        if ((!this.id || this.id === 0) && !localStorage.getItem(\"id\" + user)) {\r\n            return <Redirect to='/Departments' />\r\n        }\r\n\r\n        const SuccessMessage = \"Department has been edited successfully.\"\r\n        const ErrorMessage = \"Name and Location fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Prompt when={this.state.isBlocking} message={this.handlePrompt} />\r\n                <Container className=\"border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit - Department</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department name</label>\r\n                            </div>\r\n                            <input value={Name} onChange={(e) => { this.setState({ Name: e.target.value, isBlocking: true }, () => this.saveStateToLocalStorage()) }} className={\"mb-1 \" + (readOnly === true ? \"disabled-inputs\" : \"\")} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Location</label>\r\n                            </div>\r\n                            <input value={Location} onChange={(e) => { this.setState({ Location: e.target.value, isBlocking: true }, () => this.saveStateToLocalStorage()) }} className={\"mb-1 \" + (readOnly === true ? \"disabled-inputs\" : \"\")} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" onClick={this.handleSubmit} type=\"button\" value={(readOnly === true ? \"Edit\" : \"Update\")} />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditDepartment\r\n","import React, { Component } from 'react';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class AddEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            departmentOptions: [],\r\n            fName: '',\r\n            lName: '',\r\n            gender: '',\r\n            salary: '',\r\n            departmentId: '',\r\n            jobTitle: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                const departments = response.map((dep, index) => <option key={index + 1} value={dep.ID}>{dep.Name}\r\n                    ({dep.Location}) </option>)\r\n                this.setState({ departmentOptions: departments }, () => {\r\n                });\r\n            });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.fName === '' || this.state.lName === '' || this.state.DepartmentId === 'select'\r\n            || this.state.gender === 'select' || this.state.salary === '' || this.state.jobTitle === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n        let url = `/api/Employees`\r\n        let data = JSON.stringify({\r\n            \"ID\": 0,\r\n            \"DepartmentId\": this.state.departmentId,\r\n            \"FirstName\": this.state.fName,\r\n            \"LastName\": this.state.lName,\r\n            \"Gender\": this.state.gender,\r\n            \"Salary\": this.state.salary,\r\n            \"JobTitle\": this.state.jobTitle,                        \r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    showAlert: true, alertType: 'success', departmentId: 'select',\r\n                    fName: '', lName: '', gender: '', salary: '', jobTitle: ''\r\n                })\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const GenderOptions = [<option key=\"1\" value=\"Male\">Male</option>,\r\n        <option key=\"2\" value=\"Female\">Female</option>];\r\n        const { fName, lName, gender, salary, departmentId, jobTitle, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Employee has been added successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\")\r\n            Message = ErrorMessage\r\n\r\n        return (\r\n            <div>\r\n                <Container className=\"border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Add - Employee</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>First name</label>\r\n                            </div>\r\n                            <input type=\"text\" value={fName} onChange={(e) => { this.setState({ fName: e.target.value }) }}></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Last name</label>\r\n                            </div>\r\n                            <input type=\"text\" value={lName} onChange={(e) => { this.setState({ lName: e.target.value }) }}></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <select value={gender} onChange={(e) => { this.setState({ gender: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{GenderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Salary</label>\r\n                            </div>\r\n                            <input value={salary} onChange={(e) => { this.setState({ salary: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department</label>\r\n                            </div>\r\n                            <select value={departmentId} onChange={(e) => { this.setState({ departmentId: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{this.state.departmentOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Job Title</label>\r\n                            </div>\r\n                            <input value={jobTitle} onChange={(e) => { this.setState({ jobTitle: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" value=\"Save\" onClick={this.handleSubmit} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEmployee\r\n","import React, { Component } from 'react';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class EditEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showAlert: false,\r\n            alertType: '',\r\n            departmentOptions: [],\r\n            fName: '',\r\n            lName: '',\r\n            gender: '',\r\n            salary: '',\r\n            departmentId: '',\r\n            jobTitle: '',\r\n            joiningDate: '',\r\n            id: 0,\r\n            message: '',\r\n            readOnly: false\r\n        }\r\n        this.id = 0\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                if (response) {\r\n                    const departments = response.map((dep, index) => <option key={index + 1} value={dep.ID}>{dep.Name} ({dep.Location}) </option>)\r\n                    this.setState({ departmentOptions: departments }, () => {\r\n                    });\r\n                }\r\n            });\r\n\r\n        if (this.id !== 0) {\r\n            url = `/api/Employees/` + this.id\r\n            WebApi(url, '', 'GET')\r\n                .then(response => {\r\n                    console.log(response)\r\n                    if (response) {\r\n                        this.setState({\r\n                            fName: response.FirstName, lName: response.LastName, gender: response.Gender, salary: response.Salary,\r\n                            departmentId: response.DepartmentId, jobTitle: response.JobTitle, joiningDate: response.JoiningDate\r\n                        })\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.readOnly) {\r\n            this.setState({ readOnly: false, showAlert: false, alertType: \"\" })\r\n        }\r\n        else {\r\n            if (this.state.DepartmentId === 'select' || this.state.salary === '' || this.state.jobTitle === '') {\r\n                return this.setState({ showAlert: true, alertType: \"danger\" })\r\n            }\r\n            let url = `/api/Employees/` + this.id\r\n            let data = JSON.stringify({\r\n                \"ID\": this.id,\r\n                \"DepartmentId\": this.state.departmentId,\r\n                \"FirstName\": this.state.fName,\r\n                \"LastName\": this.state.lName,\r\n                \"Gender\": this.state.gender,\r\n                \"Salary\": this.state.salary,\r\n                \"JobTitle\": this.state.jobTitle,\r\n                \"JoiningDate\": this.state.joiningDate\r\n            })\r\n            WebApi(url, data, 'PUT')\r\n                .then(response => {\r\n                    if (response.Message && response.Message.toUpperCase() === \"SUCCESS\")\r\n                        this.setState({\r\n                            showAlert: true, alertType: 'success', readOnly: true\r\n                        })\r\n                    else {\r\n                        console.log(response)\r\n                        return this.setState({ showAlert: true, alertType: \"danger\", message: \"Some error occured, please try again.\" })\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render(props) {\r\n        if (this.props.location && this.props.location.data && this.props.location.data.ID)\r\n            this.id = this.props.location.data.ID\r\n\r\n        const { fName, lName, gender, salary, departmentId, jobTitle, showAlert, alertType, message, readOnly } = this.state\r\n        const SuccessMessage = \"Employee data has been edited successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-4\">\r\n                        <b>Edit - Employee</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Employee name</label>\r\n                            </div>\r\n                            <label>{fName} {lName}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <label>{gender}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Salary</label>\r\n                            </div>\r\n                            <input className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={salary} onChange={(e) => { this.setState({ salary: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department</label>\r\n                            </div>\r\n                            <select className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={departmentId} onChange={(e) => { this.setState({ departmentId: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{this.state.departmentOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Job Title</label>\r\n                            </div>\r\n                            <input className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={jobTitle} onChange={(e) => { this.setState({ jobTitle: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" value={(readOnly === true ? \"Edit\" : \"Update\")} onClick={() => this.handleSubmit()} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEmployee\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { format } from \"date-fns\";\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class Employees extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeeData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Employees`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    employeeData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.employeeData) === 'object' && this.state.employeeData && this.state.employeeData.length) {\r\n            return this.state.employeeData.slice(first, first + count).map((employee, index) => {\r\n                const { ID, FirstName, LastName, Gender, DepartmentName, DepartmentLocation, JobTitle, JoiningDate, InService } = employee //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{ID}</td>\r\n                        <td>{FirstName + \" \" + LastName}</td>\r\n                        <td>{Gender}</td>\r\n                        <td>{DepartmentName}</td>\r\n                        <td>{DepartmentLocation}</td>\r\n                        <td>{JoiningDate !== null ? format(new Date(JoiningDate), \"dd MMM yyyy\") : ''}</td>\r\n                        <td>{InService === true ? \"Yes\" : \"No\"}</td>\r\n                        <td>{JobTitle}</td>\r\n                        <td>\r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditEmployee',\r\n                                data: { ID }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader = () => {\r\n        let header = this.state.keys\r\n        console.log(header)\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '')\r\n                return <th key={index}></th>\r\n            if (key.toUpperCase() === 'ID')\r\n                return <th className=\"col1width15\" key={index}>ID</th>\r\n            if (key.toUpperCase() === \"DEPARTMENTNAME\")\r\n                return <th key={index}>DEPARTMENT</th>\r\n            if (key.toUpperCase() === \"DEPARTMENTLOCATION\")\r\n                return <th key={index}>LOCATION</th>\r\n            if (key.toUpperCase() !== \"FIRSTNAME\" && key.toUpperCase() !== \"LASTNAME\" && key.toUpperCase() !== \"DEPARTMENTID\" && key.toUpperCase() !== \"SALARY\" && key.toUpperCase() !== \"LEAVINGDATE\")\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            if (key.toUpperCase() === \"FIRSTNAME\")\r\n                return <th key={index}>NAME</th>\r\n            return null\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddEmployee = () => {\r\n        this.props.history.push('/AddEmployee')\r\n    }\r\n\r\n    render() {\r\n        const { totalRows, currentPageRows, firstRow, activePage, noOfPages } = this.state\r\n\r\n        return (<Container>\r\n            <div className=\"table-wrapper\">\r\n                <div className=\"table-title\">\r\n                    <div className=\"row nowrap\">\r\n                        <div className=\"col-sm-8\"><h2>Employee <b>Details</b></h2></div>\r\n                        <div className=\"col-sm-4\">\r\n                            <button type=\"button\" onClick={this.handleAddEmployee} className=\"btn btn-success add-new\"><i className=\"fa fa-plus\"></i> Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"table table-striped table-hover table-bordered border-0 tablemobile\">\r\n                    <thead>\r\n                        <tr className=\"bg-secondary\">\r\n                            {this.renderTableHeader()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData(firstRow, currentPageRows)}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"clearfix\">\r\n                    <div className=\"hint-text\">Showing <b>{totalRows > currentPageRows ? currentPageRows : totalRows}</b> out of <b>{totalRows}</b> entries</div>\r\n                    <ul className=\"pagination\">\r\n                        <li className={\"page-item \" + (activePage === 1 ? \"disabled\" : \"\")}>\r\n                            <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                <i className=\"fa fa-angle-double-left\"></i>\r\n                            </a>\r\n                        </li>\r\n                        {this.renderPagination()}\r\n                        <li className={\"page-item \" + (activePage === noOfPages ? \"disabled\" : \"\")}>\r\n                            <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                <i className=\"fa fa-angle-double-right\"></i>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Employees\r\n","import React, { Component } from 'react';\r\nimport '../css/Home.css';\r\nimport WebApi from '../Helpers/WebApi';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n    constructor(params) {\r\n        super(params)\r\n        this.state = {\r\n            Username: '',\r\n            Password: '',\r\n            token: localStorage.getItem('myToken') || '',\r\n            loggedInUser: ''\r\n        };\r\n    }\r\n    \r\n    handleClick = () => {\r\n        let url = `/token`;\r\n        let data = 'username=' + this.state.Username +\r\n            '&password=' + this.state.Password + '&grant_type=password'\r\n\r\n        WebApi(url, data, 'POST', false)\r\n            .then(response => {\r\n                console.log(\"UserName:\" + response.userName)\r\n                this.setState({\r\n                    token: response.access_token,\r\n                    loggedInUser: response.userName\r\n                }, () => {\r\n                    localStorage.setItem('myToken', this.state.token)\r\n                    localStorage.setItem('myUserName', this.state.loggedInUser)\r\n                    this.props.history.push('/Employees')\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (isLoggedIn)\r\n            return (<div className=\"row justify-content-md-center\">Welcome to the Employee portal.</div>)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                        <div className=\"card card-signin my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Sign In</h5>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"email\" className=\"form-control\" placeholder=\"Username\" value={this.state.Username} onChange={(e) => { this.setState({ Username: e.target.value }) }} />\r\n                                </div>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" value={this.state.Password} onChange={(e) => { this.setState({ Password: e.target.value }) }} placeholder=\"Password\" />\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember password</label>\r\n                                </div>\r\n                                <button className=\"btn btn-lg btn-success btn-block text-uppercase\" value=\"Submit\" onClick={this.handleClick} type=\"button\">Sign in</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class NotFoundPage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<h1>Page Not Found</h1>\r\n\t\t\t<p>Sorry, there is nothing to see here.</p>\r\n\t\t\t<p><Link to=\"/\">Back to Home</Link></p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default NotFoundPage\r\n","function ParseError(error) {\r\n    try {\r\n        if (error !== '') {\r\n            let parsedError = JSON.parse(error);\r\n            if (parsedError.ModelState !== null) {\r\n                let modelState = parsedError.ModelState;\r\n                if (Object.getOwnPropertyNames(modelState) !== null) {\r\n                    let modelStateArr = Object.getOwnPropertyNames(modelState)\r\n                    if (modelStateArr[0] === '')\r\n                        return modelState[''][0]\r\n                    else if (modelStateArr[0] === 'model.ConfirmPassword')\r\n                        return modelState['model.ConfirmPassword'][0]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (exception) {\r\n        return 'Some error occured, please try again'\r\n    }\r\n}\r\n\r\nexport default ParseError\r\n","import React, { Component } from 'react'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport ParseError from '../../Helpers/ParseError';\r\nimport AlertMessage from '../../AlertMessage';\r\n\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            UserName: '',\r\n            UserId: '',\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: ''\r\n        }\r\n        this.id = 0;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = this.id === 0 ? `/api/Account/UserInfo` : '/api/Account/UserInfo/' + this.id\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                if (response.UserId) {\r\n                    this.setState({\r\n                        UserName: response.UserName ? response.UserName : \"\",\r\n                        UserId: response.UserId ? response.UserId : \"\",\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.newPassword === '' || this.state.confirmPassword === '')\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        if (this.state.oldPassword === '' && this.id === 0)\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        let url = this.id === 0 ? `/api/Account/ChangePassword` : `/api/Account/ResetPassword`\r\n        let dataObject = {\r\n            \"NewPassword\": this.state.newPassword,\r\n            \"ConfirmPassword\": this.state.confirmPassword\r\n        }\r\n\r\n        if (this.id === 0) {\r\n            dataObject[\"OldPassword\"] = this.state.oldPassword\r\n        }\r\n        else\r\n            dataObject[\"UserId\"] = this.state.UserId\r\n\r\n        let data = JSON.stringify(dataObject)\r\n\r\n        WebApi(url, data, 'POST')\r\n            .then((response) => {\r\n                if (response.Message && response.Message.toUpperCase() === \"SUCCESS\") {\r\n                    return this.setState({ showAlert: true, alertType: 'success', })\r\n                }\r\n                else {\r\n                    return this.setState({ showAlert: true, alertType: \"danger\", message: ParseError(response) })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        let title = \"Change Password\"\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.UsersId)\r\n            this.id = this.props.location.data.UsersId\r\n\r\n        if (this.id !== 0)\r\n            title = \"Reset Password\"\r\n\r\n        const { confirmPassword, newPassword, oldPassword, message, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Password has been changed successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h5 className=\"mt-2 mb-5\"><b>{title}</b></h5>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Username</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.UserName}</label>\r\n                        </div>\r\n                        <div className={\"row p-2 \" + (this.id === 0 ? \"\" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Old Password</label>\r\n                            </div>\r\n                            <input value={oldPassword} onChange={(e) => this.setState({ oldPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>New Password</label>\r\n                            </div>\r\n                            <input value={newPassword} onChange={(e) => this.setState({ newPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\">\r\n                            <label>Confirm New Password</label>\r\n                        </div>\r\n                            <input value={confirmPassword} onChange={(e) => this.setState({ confirmPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-2\" value=\"Submit\" onClick={this.handleSubmit} type=\"button\" />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { Component } from 'react'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport AlertMessage from '../../AlertMessage';\r\nimport moment from 'moment';\r\nimport \"../../css/User.css\";\r\n\r\nexport class CreateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            NewUserName: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n            Email: '',\r\n            ConfirmEmail: '',\r\n            FirstName: '',\r\n            LastName: '',\r\n            Gender: '',\r\n            DOB: '',\r\n            Phone: '',\r\n            ConfirmPhone: '',\r\n            ShowConfirmEmail: false,\r\n            ShowConfirmPhone: false,\r\n            ShowConfirmPassword: false,\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: '',\r\n        }\r\n    }\r\n\r\n    handleChangeEmail = (e) => {\r\n        this.setState({ Email: e.target.value }, () => {\r\n            if (this.state.Email && this.state.Email !== this.prevEmail) {\r\n                this.setState({ ShowConfirmEmail: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmEmail: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ Phone: e.target.value }, () => {\r\n            if (this.state.Phone && this.state.Phone !== this.prevPhone) {\r\n                this.setState({ ShowConfirmPhone: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmPhone: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePassword = (e) => {\r\n        this.setState({ Password: e.target.value }, () => {\r\n            if (this.state.Password && this.state.Password !== this.prevPassword) {\r\n                this.setState({ ShowConfirmPassword: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmPassword: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeDOB = date => {\r\n        this.setState({\r\n            DOB: date\r\n        }, () => {\r\n            console.log(this.state.DOB)\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.FirstName === '' || this.state.LastName === '' || this.state.Password === '' || this.state.Gender === 'select'\r\n            || this.state.DOB === '' || this.state.Phone === '' || this.state.Email === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n\r\n        let userInforViewModel =\r\n        {\r\n            \"UserId\": 0,\r\n            \"UserName\": this.state.NewUserName,\r\n            \"Email\": this.state.Email,\r\n            \"Phone\": this.state.Phone,\r\n            \"Password\": this.state.Password\r\n        }\r\n\r\n        if (!this.state.ShowConfirmPassword) {\r\n            userInforViewModel[\"ConfirmPassword\"] = this.state.Password\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmPassword\"] = this.state.ConfirmPassword\r\n\r\n        if (!this.state.ShowConfirmEmail) {\r\n            userInforViewModel[\"ConfirmEmail\"] = this.state.Email\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmEmail\"] = this.state.ConfirmEmail\r\n\r\n        if (!this.state.ShowConfirmPhone) {\r\n            userInforViewModel[\"ConfirmPhone\"] = this.state.Phone\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmPhone\"] = this.state.ConfirmPhone\r\n\r\n        let url = `/api/Account/Register`\r\n        let data = JSON.stringify(userInforViewModel)\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.Message && response.Message === 'SUCCESS') {\r\n                    url = `/api/AspNetUserInfoes`\r\n                    data = JSON.stringify({\r\n                        \"Id\": 0,\r\n                        \"FirstName\": this.state.FirstName,\r\n                        \"LastName\": this.state.LastName,\r\n                        \"Gender\": this.state.Gender,\r\n                        \"DOB\": this.state.DOB != null ? moment(this.state.DOB).format('DD-MMM-YYYY') : '',\r\n                        \"UsersId\": 0,\r\n                        \"userInfoViewModel\": userInforViewModel\r\n                    })\r\n                    WebApi(url, data, 'POST')\r\n                        .then(response => {\r\n                            console.log(response)\r\n                            if (response.Message && response.Message === 'SUCCESS')\r\n                                this.props.history.push('/Users')\r\n                            else\r\n                                this.setState({\r\n                                    showAlert: true, alertType: 'danger', message: response\r\n                                });\r\n                        });\r\n                }\r\n                else\r\n                    this.setState({\r\n                        showAlert: true, alertType: 'danger', message: response\r\n                    });\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const GenderOptions = [<option key=\"1\" value=\"Male\">Male</option>,\r\n        <option key=\"2\" value=\"Female\">Female</option>];\r\n\r\n        const { NewUserName, Password, ConfirmPassword, Email, FirstName, LastName, Gender, DOB, Phone, ConfirmPhone, ConfirmEmail, showAlert, alertType, message } = this.state\r\n\r\n        const SuccessMessage = \"User Profile has been edited successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container className=\"border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Create - User Profile</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Username</label>\r\n                            </div>\r\n                            <input value={NewUserName} onChange={(e) => { this.setState({ NewUserName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Password</label>\r\n                            </div>\r\n                            <input className=\"UserProfile\" value={Password} onChange={(e) => this.handleChangePassword(e)} type=\"password\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmPassword === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Password</label>\r\n                            </div>\r\n                            <input className=\"UserProfile\" value={ConfirmPassword} onChange={(e) => { this.setState({ ConfirmPassword: e.target.value }) }} type=\"password\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>First Name</label>\r\n                            </div>\r\n                            <input value={FirstName} onChange={(e) => { this.setState({ FirstName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Last Name</label>\r\n                            </div>\r\n                            <input value={LastName} onChange={(e) => { this.setState({ LastName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Email</label>\r\n                            </div>\r\n                            <input value={Email} onChange={(e) => this.handleChangeEmail(e)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmEmail === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Email</label>\r\n                            </div>\r\n                            <input value={ConfirmEmail} onChange={(e) => { this.setState({ ConfirmEmail: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Phone</label>\r\n                            </div>\r\n                            <input value={Phone} onChange={(e) => this.handleChangePhone(e)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmPhone === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Phone</label>\r\n                            </div>\r\n                            <input value={ConfirmPhone} onChange={(e) => { this.setState({ ConfirmPhone: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <select value={Gender} onChange={(e) => { this.setState({ Gender: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{GenderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Date of Birth</label>\r\n                            </div>\r\n                            <DatePicker placeholderText=\"dd/MM/yyyy\" dateFormat=\"dd/MM/yyyy\" selected={DOB} onChange={this.handleChangeDOB} />\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                            </div>\r\n                            <input className=\"btn btn-success mr-1\" value=\"Save\" onClick={() => this.handleSubmit()} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n\r\n                </Container>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateUser\r\n","import React, { Component } from 'react'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport AlertMessage from '../../AlertMessage';\r\nimport moment from 'moment';\r\n\r\nexport class EditUserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            UserId: '',\r\n            Id: '',\r\n            UserName: '',\r\n            Email: '',\r\n            ConfirmEmail: '',\r\n            FirstName: '',\r\n            LastName: '',\r\n            Gender: '',\r\n            DOB: '',\r\n            Phone: '',\r\n            ConfirmPhone: '',\r\n            ShowConfirmEmail: false,\r\n            ShowConfirmPhone: false,\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: '',\r\n        }\r\n\r\n        this.prevEmail = ''\r\n        this.prevPhone = ''\r\n        this.id = 0;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = this.id === 0 ? `/api/Account/UserInfo` : '/api/Account/UserInfo/' + this.id\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                if (response.UserId) {\r\n                    this.setState({\r\n                        UserName: response.UserName ? response.UserName : \"\",\r\n                        UserId: response.UserId ? response.UserId : \"\",\r\n                        Email: response.Email ? response.Email : \"\",\r\n                        Phone: response.Phone ? response.Phone : \"\"\r\n                    }, () => {\r\n\r\n                        url = this.id === 0 ? `/api/AspNetUserInfoes/` + this.state.UserId : `/api/AspNetUserInfoes/` + this.id\r\n                        WebApi(url, '', 'GET')\r\n                            .then(response => {\r\n                                this.prevEmail = this.state.Email\r\n                                this.prevPhone = this.state.Phone\r\n                                if (response) {\r\n                                    this.setState({\r\n                                        Id: response.Id,\r\n                                        FirstName: response.FirstName,\r\n                                        LastName: response.LastName,\r\n                                        Gender: response.Gender,\r\n                                        DOB: response.DOB !== null ? new Date(response.DOB) : ''\r\n                                    })\r\n                                }\r\n                            })\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleChangeEmail = (e) => {\r\n        this.setState({ Email: e.target.value }, () => {\r\n            if (this.state.Email && this.state.Email !== this.prevEmail) {\r\n                this.setState({ ShowConfirmEmail: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmEmail: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ Phone: e.target.value }, () => {\r\n            if (this.state.Phone && this.state.Phone !== this.prevPhone) {\r\n                this.setState({ ShowConfirmPhone: true })\r\n            }\r\n            else {\r\n                this.setState({ ShowConfirmPhone: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeDOB = date => {\r\n        this.setState({\r\n            DOB: date\r\n        }, () => {\r\n            console.log(this.state.DOB)\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.FirstName === '' || this.state.LastName === '' || this.state.Gender === 'select'\r\n            || this.state.DOB === '' || this.state.Phone === '' || this.state.Email === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n\r\n        let userInforViewModel =\r\n        {\r\n            \"UserId\": this.state.UserId,\r\n            \"UserName\": this.state.UserName,\r\n            \"Email\": this.state.Email,\r\n            \"Phone\": this.state.Phone\r\n\r\n        }\r\n        if (!this.state.ShowConfirmEmail) {\r\n            userInforViewModel[\"ConfirmEmail\"] = this.state.Email\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmEmail\"] = this.state.ConfirmEmail\r\n\r\n        if (!this.state.ShowConfirmPhone) {\r\n            userInforViewModel[\"ConfirmPhone\"] = this.state.Phone\r\n        }\r\n        else\r\n            userInforViewModel[\"ConfirmPhone\"] = this.state.ConfirmPhone\r\n\r\n        let url = `/api/AspNetUserInfoes/` + this.state.UserId\r\n        let data = JSON.stringify({\r\n            \"Id\": this.state.Id,\r\n            \"FirstName\": this.state.FirstName,\r\n            \"LastName\": this.state.LastName,\r\n            \"Gender\": this.state.Gender,\r\n            \"DOB\": this.state.DOB != null ? moment(this.state.DOB).format('DD-MMM-YYYY') : '',\r\n            \"UsersId\": this.state.UserId,\r\n            \"userInfoViewModel\": userInforViewModel\r\n        })\r\n        WebApi(url, data, 'PUT')\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.Message && response.Message === 'SUCCESS')\r\n                    return this.props.history.goBack()\r\n                else\r\n                    this.setState({\r\n                        showAlert: true, alertType: 'danger', message: response\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const GenderOptions = [<option key=\"1\" value=\"Male\">Male</option>,\r\n        <option key=\"2\" value=\"Female\">Female</option>];\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.UsersId)\r\n            this.id = this.props.location.data.UsersId\r\n\r\n        const { Email, FirstName, LastName, Gender, DOB, Phone, ConfirmPhone, ConfirmEmail, showAlert, alertType, message } = this.state\r\n\r\n        const SuccessMessage = \"User Profile has been edited successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container className=\"border\">\r\n\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit - User Profile</b>\r\n                    </h4>\r\n\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Username</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.UserName}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>First Name</label>\r\n                            </div>\r\n                            <input value={FirstName} onChange={(e) => { this.setState({ FirstName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Last Name</label>\r\n                            </div>\r\n                            <input value={LastName} onChange={(e) => { this.setState({ LastName: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Email</label>\r\n                            </div>\r\n                            <input value={Email} onChange={(e) => this.handleChangeEmail(e)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmEmail === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Email</label>\r\n                            </div>\r\n                            <input value={ConfirmEmail} onChange={(e) => { this.setState({ ConfirmEmail: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Phone</label>\r\n                            </div>\r\n                            <input value={Phone} onChange={(e) => this.handleChangePhone(e)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className={\"row  p-2 \" + (this.state.ShowConfirmPhone === true ? \" \" : \"d-none\")}>\r\n                            <div className=\"col-4\">\r\n                                <label>Confirm Phone</label>\r\n                            </div>\r\n                            <input value={ConfirmPhone} onChange={(e) => { this.setState({ ConfirmPhone: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <select value={Gender} onChange={(e) => { this.setState({ Gender: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{GenderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Date of Birth</label>\r\n                            </div>\r\n                            <DatePicker placeholderText=\"dd/MM/yyyy\" dateFormat=\"dd/MM/yyyy\" selected={DOB} onChange={this.handleChangeDOB} />\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                            </div>\r\n                            <input className=\"btn btn-success mr-1\" value=\"Save\" onClick={() => this.handleSubmit()} type=\"button\" />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </Container>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserProfile\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SideNav } from 'react-side-nav';\r\nimport './css/SideNavMenu.css';\r\n\r\nconst NavLink = props => (<Link to={props.to} {...props}><i className={`fa ${props.icon}`} />{props.label}</Link>);\r\nconst Chevron = props => (<i className={('fa', props.className, { 'fa-chevron-left': !props.expanded, 'fa-chevron-down': props.expanded })} />);\r\nconst Icon = props => (<i className={('fa', props.className)} />);\r\n\r\nexport class SideBar extends Component {\r\n\r\n    /*Example of how to create menuItems object\r\n     menuItems = [\r\n     {\r\n       id: 1,\r\n       label: 'Item 1',\r\n       icon: 'fas',\r\n       link: '/item11',\r\n      \r\n     },\r\n     {\r\n       id: 2,\r\n       label: 'Item 2',\r\n       icon: 'fas',\r\n       link: '/item12',\r\n      \r\n     },\r\n     { id: 3,\r\n       label: 'Item 3',\r\n       icon: 'fas',\r\n       items: [\r\n         { id: 11,\r\n           label: 'Item 1.1',\r\n           icon: 'fas fa-car',\r\n           link: '/item11',\r\n         },\r\n         { id: 12,\r\n           label: 'Item 1.2',\r\n           icon: 'fas fa-bullhorn',\r\n           link: '/item12',\r\n         },\r\n       ],\r\n     },\r\n   ]; */\r\n\r\n    render() {\r\n        let { menuItems } = this.props\r\n        return (\r\n            <div className=\"hidesidenav\">\r\n                <SideNav\r\n                    items={menuItems}\r\n                    linkComponent={NavLink}\r\n                    chevronComponent={Chevron}\r\n                    iconComponent={Icon} style={{\r\n                        minHeight: \"200px\"\r\n                    }}\r\n                /></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar\r\n","import React, { Component } from 'react'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport { Container } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport SideBar from '../../SideBar';\r\n\r\nexport class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            UserId: '',\r\n            UserName: localStorage.getItem(\"myUserName\"),\r\n            Email: '',\r\n            FirstName: '',\r\n            LastName: '',\r\n            Gender: '',\r\n            DOB: '',\r\n            Phone: '',\r\n        }\r\n    }\r\n\r\n    menuItems = [\r\n        {\r\n            id: 1,\r\n            label: 'Create User',\r\n            link: '/CreateUser'\r\n        },\r\n        {\r\n            id: 2,\r\n            label: 'Change Password',\r\n            link: '/ChangePassword'\r\n        }];\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Account/UserInfo`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                if (response.UserId) {\r\n                    this.setState({\r\n                        UserId: response.UserId,\r\n                        Email: response.Email,\r\n                        Phone: response.Phone\r\n                    }, () => {\r\n                        url = `/api/AspNetUserInfoes/` + this.state.UserId\r\n                        WebApi(url, '', 'GET')\r\n                            .then(resp => {\r\n                                console.log(resp)\r\n                                if (resp) {\r\n                                    this.setState({\r\n                                        FirstName: resp.FirstName,\r\n                                        LastName: resp.LastName,\r\n                                        Gender: resp.Gender,\r\n                                        DOB: resp.DOB != null ? moment(resp.DOB).format('DD-MMM-YYYY') : ''\r\n                                    })\r\n                                }\r\n                            })\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleEditUser = () => {\r\n        this.props.history.push('/EditUserProfile')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-2 padding-left-0 padding-right-5\">\r\n                    <SideBar menuItems={this.menuItems}></SideBar>\r\n                </div>\r\n                <div className=\"col-8\">\r\n\r\n                    <Container fluid className=\"border\">\r\n\r\n                        <div className=\"row  p-2 nowrap\">\r\n                            <h4 className=\"mt-2 mb-5 col-11\">\r\n                                <b>User Profile</b>\r\n                            </h4>\r\n                            <div className=\"col-1\">\r\n                                <button type=\"button\" onClick={this.handleEditUser} className=\"btn btn-success add-new mt-1 float-rt\">Edit</button>\r\n                            </div>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Username</label>\r\n                                </div>\r\n                                <label className=\"mt-1\">{this.state.UserName}</label>\r\n                            </div>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Name</label>\r\n                                </div>\r\n                                <label className=\"mt-1\">\r\n                                    {this.state.FirstName} {this.state.LastName}\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Email</label>\r\n                                </div>\r\n                                <label className=\"mt-1\">{this.state.Email}</label>\r\n                            </div>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Phone</label>\r\n                                </div>\r\n                                <label className=\"mt-1\">{this.state.Phone}</label>\r\n                            </div>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Gender</label>\r\n                                </div>\r\n                                <label className=\"mt-1\">{this.state.Gender}</label>\r\n                            </div>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Date of Birth</label>\r\n                                </div>\r\n                                <label className=\"mt-1\">{this.state.DOB}</label>\r\n                            </div>\r\n                            <div className=\"row  p-2\">\r\n                                <div className=\"col-4\">\r\n                                </div>\r\n                                {/* <Link to='/ChangePassword' className=\"mt-1\">Change Password</Link> */}\r\n                            </div>\r\n                        </form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport moment from 'moment';\r\n\r\nexport class Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/AspNetUserInfoes`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    userData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.userData) === 'object' && this.state.userData && this.state.userData.length) {\r\n            return this.state.userData.slice(first, first + count).map((user, index) => {\r\n                const { FirstName, LastName, Gender, DOB, UsersId } = user //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{FirstName + \" \" + LastName}</td>\r\n                        <td>{Gender}</td>\r\n                        <td>{DOB != null ? moment(DOB).format('DD-MMM-YYYY') : ''}</td>\r\n                        <td className=\"customWidth100\"> \r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditUserProfile',\r\n                                data: { UsersId }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>{'  '}\r\n                            <Link className=\"changePassword\" title=\"Change Password\" to={{\r\n                                pathname: '/ResetPassword',\r\n                                data: { UsersId }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">vpn_key</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader() {\r\n        let header = this.state.keys\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '') {\r\n                return <th key={index}></th>\r\n            }\r\n            if (key.toUpperCase() !== \"FIRSTNAME\" && key.toUpperCase() !== \"LASTNAME\" && key.toUpperCase() !== \"USERINFOVIEWMODEL\" && key.toUpperCase() !== \"USERSID\" && key.toUpperCase() !== \"ID\")\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            if (key.toUpperCase() === \"FIRSTNAME\")\r\n                return <th key={index}>NAME</th>\r\n            return null\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddUser = () => {\r\n        this.props.history.push('/CreateUser')\r\n    }\r\n\r\n    render() {\r\n        const { totalRows, currentPageRows, firstRow, activePage, noOfPages } = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"table-wrapper\">\r\n                    <div className=\"table-title\">\r\n                        <div className=\"row nowrap\">\r\n                            <div className=\"col-sm-8\"><h2>Users <b>Detail</b></h2></div>\r\n                            <div className=\"col-sm-4\">\r\n                                <button type=\"button\" onClick={this.handleAddUser} className=\"btn btn-success add-new\">\r\n                                    <i className=\"fa fa-plus\"></i> Add New\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"table table-striped table-hover table-bordered tablemobileoverflowx\">\r\n                        <thead>\r\n                            <tr className=\"bg-secondary\">\r\n                                {this.renderTableHeader()}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTableData(firstRow, currentPageRows)}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"clearfix\">\r\n                        <div className=\"hint-text\">Showing <b>{totalRows > currentPageRows ? currentPageRows : totalRows}</b> out of <b>{totalRows}</b> entries</div>\r\n                        <ul className=\"pagination\">\r\n                            <li className={\"page-item \" + (activePage === 1 ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-left\"></i>\r\n                                </a>\r\n                            </li>\r\n                            {this.renderPagination()}\r\n                            <li className={\"page-item \" + (activePage === noOfPages ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-right\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Users\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport './components/css/Global.css';\r\nimport { RequireAuth } from './components/Helpers/RequireAuth';\r\nimport { Layout } from './components/Layout';\r\nimport { AddDepartment } from './components/Pages/Department/AddDepartment';\r\nimport { Departments } from './components/Pages/Department/Departments';\r\nimport { EditDepartment } from './components/Pages/Department/EditDepartment';\r\nimport { AddEmployee } from './components/Pages/Employee/AddEmployee';\r\nimport { EditEmployee } from './components/Pages/Employee/EditEmployee';\r\nimport { Employees } from './components/Pages/Employee/Employees';\r\nimport { Home } from './components/Pages/Home';\r\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\r\nimport { ChangePassword } from './components/Pages/User/ChangePassword';\r\nimport { CreateUser } from './components/Pages/User/CreateUser';\r\nimport { EditUserProfile } from './components/Pages/User/EditUserProfile';\r\nimport { UserProfile } from './components/Pages/User/UserProfile';\r\nimport { Users } from './components/Pages/User/Users';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact={true} path='/' component={Home} />\r\n          <Route exact={true} path='/Employees' component={RequireAuth(Employees)} />\r\n          <Route exact={true} path='/Departments' component={RequireAuth(Departments)} />\r\n          <Route exact={true} path='/AddDepartment' component={RequireAuth(AddDepartment)} />\r\n          <Route exact={true} path='/EditDepartment' component={RequireAuth(EditDepartment)} />\r\n          <Route exact={true} path='/AddEmployee' component={RequireAuth(AddEmployee)} />\r\n          <Route exact={true} path='/EditEmployee' component={RequireAuth(EditEmployee)} />\r\n          <Route exact={true} path='/UserProfile' component={RequireAuth(UserProfile)} />\r\n          <Route exact={true} path='/ChangePassword' component={RequireAuth(ChangePassword)} />\r\n          <Route exact={true} path='/ResetPassword' component={RequireAuth(ChangePassword)} />\r\n          <Route exact={true} path='/EditUserProfile' component={RequireAuth(EditUserProfile)} />\r\n          <Route exact={true} path='/CreateUser' component={RequireAuth(CreateUser)} />\r\n          <Route exact={true} path='/Users' component={RequireAuth(Users)} />\r\n          <Route path='/*' component={NotFoundPage} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst LoadingIndicator = props => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n    promiseInProgress &&\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"70\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\", alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Loader type=\"ThreeDots\" color=\"#2BAD60\" height={70} width={70} />    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <div>\r\n      <App />\r\n      <LoadingIndicator />\r\n    </div>\r\n  </BrowserRouter>,\r\n\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}