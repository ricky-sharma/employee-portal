{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Helpers/WebApi.js","components/Pages/Home.js","components/Pages/Employee/Employees.js","components/Pages/Department/Departments.js","components/AlertMessage.js","components/Pages/Department/AddDepartment.js","components/Pages/Department/EditDepartment.js","components/Pages/Employee/AddEmployee.js","components/Pages/Employee/EditEmployee.js","components/Pages/User/UserProfile.js","components/Pages/NotFoundPage.js","components/Helpers/ParseError.js","components/Pages/User/ChangePassword.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","handleSignOut","localStorage","removeItem","console","log","toggleNavbar","bind","state","collapsed","this","setState","User","SignOut","getItem","tag","Link","type","onClick","to","className","light","isOpen","navbar","Component","displayName","name","Layout","children","WebApi","apiUrl","data","method","auth","authHeader","headers","Authorization","requestInfo","withCredentials","body","trackPromise","fetch","then","res","ok","json","error","text","statusText","toUpperCase","alert","result","Home","params","handleClick","Username","Password","response","userName","token","access_token","loggedInUser","setItem","history","push","placeholder","value","onChange","e","target","id","htmlFor","Employees","componentDidMount","totalRows","length","noOfPages","parseInt","pageRows","lastPageRows","employeeData","keys","Object","renderTableData","first","count","slice","map","employee","index","ID","FirstName","LastName","Gender","Salary","DepartmentName","DepartmentLocation","JobTitle","key","title","pathname","data-toggle","renderTableHeader","header","pop","handleChangePage","k","preventDefault","firstRow","currentPageRows","activePage","renderPagination","pagination","j","href","handleForwardPage","persist","prevState","handleBackwardPage","handleAddEmployee","Redirect","Departments","departmentData","department","Name","Location","handleAddDepartment","AlertMessage","message","visible","color","AddDepartment","handleSubmit","showAlert","alertType","JSON","stringify","handleBack","goBack","Message","successAlert","errorAlert","EditDepartment","url","readOnly","location","AddEmployee","departments","dep","departmentOptions","fName","lName","DepartmentId","gender","salary","jobTitle","departmentId","GenderOptions","IsLoggedIn","EditEmployee","UserProfile","Email","NotFoundPage","ParseError","parsedError","parse","ModelState","modelState","getOwnPropertyNames","modelStateArr","exception","ChangePassword","oldPassword","newPassword","confirmPassword","App","Switch","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","usePromiseTracker","promiseInProgress","style","width","height","display","justifyContent","alignItems","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5b8c5a4e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true\r\n        };\r\n    }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        }); \r\n    }\r\n\r\n    handleSignOut = () =>{\r\n        localStorage.removeItem('myToken')\r\n        console.log(\"session expired\")\r\n    }\r\n\r\n    render() {\r\n        let User, SignOut;\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (isLoggedIn) {\r\n            SignOut = <NavLink tag={Link} type=\"button\" onClick={this.handleSignOut} to=\"/\" className=\"btn btn-danger button-signout margin-rt10 float-rt\">Sign Out</NavLink>\r\n            User = <NavLink tag={Link} className=\"text-white float-rt mt-1 margin-rt10\" to='/UserProfile'>{localStorage.getItem(\"myUserName\")}</NavLink>\r\n        }\r\n        return (\r\n            <header>\r\n                <Navbar className=\"theme1 navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n                    \r\n                <Container>\r\n                <NavbarBrand className=\"text-black mb-4 mt-4 wrdbreak\" tag={Link} to=\"/\"><h3><b>Employee Portal</b></h3></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n                            <ul className=\"navbar-nav flex-grow ml-1\">\r\n                            \r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-black\" to=\"/\"><b>Home</b></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-black\" to=\"/Employees\"><b>Employees</b></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-black\" to=\"/Departments\"><b>Departments</b></NavLink>                                    \r\n                                </NavItem>  \r\n                            \r\n                                <NavItem className=\"d-md-none\"><div><small>{User}</small></div></NavItem>    \r\n                                <NavItem className=\"d-md-none\"><div><small>{SignOut}</small></div></NavItem>    \r\n                            </ul>\r\n                        </Collapse>                        \r\n                </Container>\r\n                <div className=\"d-none d-md-block d-lg-block  d-xl-block\"><small>{User}</small></div>\r\n                <div className=\"d-none d-md-block d-lg-block  d-xl-block\"><small>{SignOut}</small></div>\r\n                </Navbar>         \r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { trackPromise } from 'react-promise-tracker';\r\n\r\nfunction WebApi(apiUrl, data, method = 'POST', auth = true) {\r\n    let authHeader = 'Bearer ' + localStorage.getItem('myToken')\r\n\r\n    let headers = {\r\n        \"Content-Type\": 'application/json',\r\n        \"Accept\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": '*'\r\n    }\r\n    if (auth)\r\n        headers.Authorization = authHeader\r\n\r\n    let requestInfo = {\r\n        method: method,\r\n        withCredentials: true,\r\n        headers: headers\r\n    }\r\n    if (method === 'POST' || method === 'PUT')\r\n        requestInfo.body = data\r\n\r\n    return trackPromise(fetch('http://employee.service.com' + apiUrl, requestInfo).then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            var error = res.text();\r\n            let errorStatus = res.statusText\r\n            if (errorStatus.toUpperCase() === 'UNAUTHORIZED') {\r\n                alert('Session has expired.')\r\n                localStorage.removeItem('myToken')\r\n            }\r\n            throw error;\r\n        }\r\n    }).then(result => {\r\n        return result;\r\n    }, error => {\r\n        return error;\r\n    }))\r\n}\r\n\r\nexport default WebApi","import React, { Component } from 'react';\r\nimport '../css/Home.css';\r\nimport WebApi from '../Helpers/WebApi';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n    constructor(params) {\r\n        super(params)\r\n        this.state = {\r\n            Username: '',\r\n            Password: '',\r\n            token: localStorage.getItem('myToken') || '',\r\n            loggedInUser: ''\r\n        };\r\n    }\r\n    \r\n    handleClick = () => {\r\n        let url = `/token`;\r\n        let data = 'username=' + this.state.Username +\r\n            '&password=' + this.state.Password + '&grant_type=password'\r\n\r\n        WebApi(url, data, 'POST', false)\r\n            .then(response => {\r\n                console.log(\"UserName:\" + response.userName)\r\n                this.setState({\r\n                    token: response.access_token,\r\n                    loggedInUser: response.userName\r\n                }, () => {\r\n                    localStorage.setItem('myToken', this.state.token)\r\n                    localStorage.setItem('myUserName', this.state.loggedInUser)\r\n                    this.props.history.push('/Employees')\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (isLoggedIn)\r\n            return (<div className=\"row justify-content-md-center\">Welcome to the Employee portal.</div>)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                        <div className=\"card card-signin my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Sign In</h5>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"email\" className=\"form-control\" placeholder=\"Username\" value={this.state.Username} onChange={(e) => { this.setState({ Username: e.target.value }) }} />\r\n                                </div>\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" value={this.state.Password} onChange={(e) => { this.setState({ Password: e.target.value }) }} placeholder=\"Password\" />\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember password</label>\r\n                                </div>\r\n                                <button className=\"btn btn-lg btn-success btn-block text-uppercase\" value=\"Submit\" onClick={this.handleClick} type=\"button\">Sign in</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class Employees extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            employeeData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Employees`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    employeeData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.employeeData) === 'object' && this.state.employeeData && this.state.employeeData.length) {\r\n            return this.state.employeeData.slice(first, first + count).map((employee, index) => {\r\n                const { ID, FirstName, LastName, Gender, Salary, DepartmentName, DepartmentLocation, JobTitle } = employee //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{ID}</td>\r\n                        <td>{FirstName + \" \" + LastName}</td>\r\n                        <td>{Gender}</td>\r\n                        <td>{Salary}</td>\r\n                        <td>{DepartmentName}</td>\r\n                        <td>{DepartmentLocation}</td>\r\n                        <td>{JobTitle}</td>\r\n                        <td>\r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditEmployee',\r\n                                data: { ID }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader = () => {\r\n        let header = this.state.keys\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '')\r\n                return <th key={index}></th>\r\n            if (key.toUpperCase() === \"DEPARTMENTNAME\")\r\n                return <th key={index}>DEPARTMENT</th>\r\n            if (key.toUpperCase() === \"DEPARTMENTLOCATION\")\r\n                return <th key={index}>LOCATION</th>\r\n            if (key.toUpperCase() !== \"FIRSTNAME\" && key.toUpperCase() !== \"LASTNAME\" && key.toUpperCase() !== \"DEPARTMENTID\")\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            if (key.toUpperCase() === \"FIRSTNAME\")\r\n                return <th key={index}>NAME</th>\r\n            return null\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddEmployee = () => {\r\n        this.props.history.push('/AddEmployee')\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        return (<div className=\"container\">\r\n            <div className=\"table-wrapper\">\r\n                <div className=\"table-title\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-8\"><h2>Employee <b>Details</b></h2></div>\r\n                        <div className=\"col-sm-4\">\r\n                            <button type=\"button\" onClick={this.handleAddEmployee} className=\"btn btn-success add-new\"><i className=\"fa fa-plus\"></i> Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"table table-striped table-hover table-bordered border-0\">\r\n                    <thead>\r\n                        <tr className=\"bg-secondary\">\r\n                            {this.renderTableHeader()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData(this.state.firstRow, this.state.currentPageRows)}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"clearfix\">\r\n                    <div className=\"hint-text\">Showing <b>{this.state.currentPageRows}</b> out of <b>{this.state.totalRows}</b> entries</div>\r\n                    <ul className=\"pagination\">\r\n                        <li className={\"page-item \" + (this.state.activePage === 1 ? \"disabled\" : \"\")}>\r\n                            <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                <i className=\"fa fa-angle-double-left\"></i>\r\n                            </a>\r\n                        </li>\r\n                        {this.renderPagination()}\r\n                        <li className={\"page-item \" + (this.state.activePage === this.state.noOfPages ? \"disabled\" : \"\")}>\r\n                            <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                <i className=\"fa fa-angle-double-right\"></i>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Employees\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport '../../css/Table.css';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class Departments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            departmentData: [],\r\n            keys: [],\r\n            noOfPages: 0,\r\n            firstRow: 0,\r\n            totalRows: 0,\r\n            currentPageRows: 10,\r\n            pageRows: 10,\r\n            lastPageRows: 10,\r\n            activePage: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                let totalRows = response.length\r\n                let noOfPages = parseInt(totalRows / this.state.pageRows, 10)\r\n                let lastPageRows = parseInt(totalRows % this.state.pageRows, 10)\r\n                if (lastPageRows > 0)\r\n                    noOfPages++;\r\n                this.setState({\r\n                    departmentData: response, keys: Object.keys(response[0]), noOfPages: noOfPages,\r\n                    totalRows: totalRows, lastPageRows: lastPageRows\r\n                })\r\n            });\r\n    }\r\n\r\n    renderTableData = (first, count) => {\r\n        if (typeof (this.state.departmentData) === 'object' && this.state.departmentData && this.state.departmentData.length) {\r\n            return this.state.departmentData.slice(first, first + count).map((department, index) => {\r\n                const { ID, Name, Location } = department //destructuring\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{ID}</td>\r\n                        <td>{Name}</td>\r\n                        <td>{Location}</td>\r\n                        <td>\r\n                            <Link className=\"edit\" title=\"Edit\" to={{\r\n                                pathname: '/EditDepartment',\r\n                                data: { ID }\r\n                            }} data-toggle=\"tooltip\">\r\n                                <i className=\"material-icons\">&#xE254;</i>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n\r\n    renderTableHeader() {\r\n        let header = this.state.keys\r\n        if (header[header.length - 1] === '') {\r\n            header.pop()\r\n        }\r\n        header.push(...[''])\r\n        return header.map((key, index) => {\r\n            if (key === '') {\r\n                return <th key={index}></th>\r\n            }\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    handleChangePage = (e, k) => {\r\n        e.preventDefault();\r\n        let pageRows = this.state.pageRows\r\n\r\n        if (k === this.state.noOfPages)\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: this.state.lastPageRows, activePage: k })\r\n        else\r\n            this.setState({ firstRow: pageRows * (k - 1), currentPageRows: pageRows, activePage: k })\r\n    }\r\n\r\n    renderPagination = () => {\r\n        let pagination = []\r\n\r\n        for (let j = 1; j <= this.state.noOfPages; j++) {\r\n            pagination.push(<li key={j} className={\"page-item \" + (this.state.activePage === j ? \"active\" : \"\")}>\r\n                <a onClick={(e) => this.handleChangePage(e, j)} href='/' className=\"page-link\">{j}</a>\r\n            </li>)\r\n        }\r\n        return pagination\r\n    }\r\n\r\n    handleForwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== this.state.noOfPages) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage + 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleBackwardPage = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        if (this.state.activePage !== 1) {\r\n            this.setState((prevState) => ({ activePage: prevState.activePage - 1 }), () => {\r\n                this.handleChangePage(e, this.state.activePage)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddDepartment = () => {\r\n        this.props.history.push('/AddDepartment')\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"table-wrapper\">\r\n                    <div className=\"table-title\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-8\"><h2>Department <b>Details</b></h2></div>\r\n                            <div className=\"col-sm-4\">\r\n                                <button type=\"button\" onClick={this.handleAddDepartment} className=\"btn btn-success add-new\">\r\n                                    <i className=\"fa fa-plus\"></i> Add New\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"table table-striped table-hover table-bordered\">\r\n                        <thead>\r\n                            <tr className=\"bg-secondary\">\r\n                                {this.renderTableHeader()}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTableData(this.state.firstRow, this.state.currentPageRows)}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"clearfix\">\r\n                        <div className=\"hint-text\">Showing <b>{this.state.currentPageRows}</b> out of <b>{this.state.totalRows}</b> entries</div>\r\n                        <ul className=\"pagination\">\r\n                            <li className={\"page-item \" + (this.state.activePage === 1 ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleBackwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-left\"></i>\r\n                                </a>\r\n                            </li>\r\n                            {this.renderPagination()}\r\n                            <li className={\"page-item \" + (this.state.activePage === this.state.noOfPages ? \"disabled\" : \"\")}>\r\n                                <a onClick={(e) => this.handleForwardPage(e)} href=\"/\" className=\"page-link\">\r\n                                    <i className=\"fa fa-angle-double-right\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Departments\r\n","import React from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nfunction AlertMessage(props) {\r\n    const { message, type, visible } = props\r\n    let className\r\n    if (!visible)\r\n        className = \"d-none\"\r\n\r\n    return (\r\n        <div className={className}>\r\n        <div className=\"col-lg-2\"></div>\r\n            <div className=\"col-sm-5 col-5 col-md-5 col-lg-8 margin-top-75\">\r\n                <Alert className=\"txt-center opacity-100\" color={type}> {message} </Alert>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertMessage\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class AddDepartment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Name: '',\r\n            Location: '',\r\n            token: localStorage.getItem('myToken') || '',\r\n            showAlert: false,\r\n            alertType: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.Name === '' || this.state.Location === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n        let url = `/api/Departments`\r\n        let data = JSON.stringify({\r\n            \"ID\": 0,\r\n            \"Name\": this.state.Name,\r\n            \"Location\": this.state.Location\r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                this.setState({ showAlert: true, alertType: 'success', Name: '', Location: '' })\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const { Name, Location, showAlert, alertType } = this.state\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n        const SuccessMessage = \"Department has been added successfully.\"\r\n        const ErrorMessage = \"Name and Location fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\")\r\n            Message = ErrorMessage\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Add Department</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department name</label>\r\n                            </div>\r\n                            <input value={Name} onChange={(e) => { this.setState({ Name: e.target.value, successAlert: false, errorAlert: false }) }} className=\"mt-1\" type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Location</label>\r\n                            </div>\r\n                            <input value={Location} onChange={(e) => { this.setState({ Location: e.target.value, successAlert: false, errorAlert: false }) }} className=\"mt-1\" type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" onClick={this.handleSubmit} type=\"button\" value=\"Submit\" />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddDepartment\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class EditDepartment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Name: '',\r\n            Location: '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: '',\r\n            readOnly: false\r\n        }\r\n        this.id = 0;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.id !== 0) {\r\n            let url = `/api/Departments/` + this.id\r\n            WebApi(url, '', 'GET')\r\n                .then(response => {\r\n                    this.setState({ Name: response.Name, Location: response.Location })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.readOnly) {\r\n            this.setState({ readOnly: false, showAlert: false, alertType: \"\" })\r\n        }\r\n        else {\r\n            if (this.state.Name === '' || this.state.Location === '') {\r\n                return this.setState({ showAlert: true, alertType: \"danger\" })\r\n            }\r\n            let url = `/api/Departments/` + this.id\r\n            let data = JSON.stringify({\r\n                \"ID\": this.id,\r\n                \"Name\": this.state.Name,\r\n                \"Location\": this.state.Location\r\n            })\r\n            WebApi(url, data, 'PUT')\r\n                .then(response => {\r\n                    if (response.Message && response.Message.toUpperCase() === \"SUCCESS\")\r\n                        this.setState({ showAlert: true, alertType: 'success', readOnly: true })\r\n                    else\r\n                        return this.setState({ showAlert: true, alertType: \"danger\", message: \"Some error occured, please try again.\" })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const { Name, Location, showAlert, alertType, message, readOnly } = this.state\r\n        const IsLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!IsLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.ID)\r\n            this.id = this.props.location.data.ID\r\n\r\n        const SuccessMessage = \"Department has been edited successfully.\"\r\n        const ErrorMessage = \"Name and Location fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit Department</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Department name</label>\r\n                            </div>\r\n                            <input value={Name} onChange={(e) => { this.setState({ Name: e.target.value }) }} className={\"mb-1 \" + (readOnly === true ? \"disabled-inputs\" : \"\")} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Location</label>\r\n                            </div>\r\n                            <input value={Location} onChange={(e) => { this.setState({ Location: e.target.value }) }} className={\"mb-1 \" + (readOnly === true ? \"disabled-inputs\" : \"\")} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-4\"></div>\r\n                            <input className=\"btn btn-success mr-1\" onClick={this.handleSubmit} type=\"button\" value={(readOnly === true ? \"Edit\" : \"Update\")} />\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditDepartment\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class AddEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            departmentOptions: [],\r\n            fName: '',\r\n            lName: '',\r\n            gender: '',\r\n            salary: '',\r\n            departmentId: '',\r\n            jobTitle: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                const departments = response.map((dep, index) => <option key={index + 1} value={dep.ID}>{dep.Name}\r\n                    ({dep.Location}) </option>)\r\n                this.setState({ departmentOptions: departments }, () => {\r\n                });\r\n            });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.fName === '' || this.state.lName === '' || this.state.DepartmentId === 'select'\r\n            || this.state.gender === 'select' || this.state.salary === '' || this.state.jobTitle === '') {\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        }\r\n        let url = `/api/Employees`\r\n        let data = JSON.stringify({\r\n            \"ID\": 0,\r\n            \"DepartmentId\": this.state.departmentId,\r\n            \"FirstName\": this.state.fName,\r\n            \"LastName\": this.state.lName,\r\n            \"Gender\": this.state.gender,\r\n            \"Salary\": this.state.salary,\r\n            \"JobTitle\": this.state.jobTitle\r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then(response => {\r\n                this.setState({\r\n                    showAlert: true, alertType: 'success', departmentId: 'select',\r\n                    fName: '', lName: '', gender: '', salary: '', jobTitle: ''\r\n                })\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const GenderOptions = [<option key=\"1\" value=\"Male\">Male</option>,\r\n        <option key=\"2\" value=\"Female\">Female</option>];\r\n        const IsLoggedIn = localStorage.getItem(\"myToken\");\r\n        const { fName, lName, gender, salary, departmentId, jobTitle, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Employee has been added successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\")\r\n            Message = ErrorMessage\r\n\r\n        if (!IsLoggedIn)\r\n            return <Redirect to='/' />\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Add Employee</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>First name</label>\r\n                            </div>\r\n                            <input type=\"text\" value={fName} onChange={(e) => { this.setState({ fName: e.target.value }) }}></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Last name</label>\r\n                            </div>\r\n                            <input type=\"text\" value={lName} onChange={(e) => { this.setState({ lName: e.target.value }) }}></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <select value={gender} onChange={(e) => { this.setState({ gender: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{GenderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Salary</label>\r\n                            </div>\r\n                            <input value={salary} onChange={(e) => { this.setState({ salary: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Department</label>\r\n                            </div>\r\n                            <select value={departmentId} onChange={(e) => { this.setState({ departmentId: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{this.state.departmentOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Job Title</label>\r\n                            </div>\r\n                            <input value={jobTitle} onChange={(e) => { this.setState({ jobTitle: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-5\"></div>\r\n                            <input className=\"btn btn-success mr-1\" value=\"Submit\" onClick={this.handleSubmit} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEmployee\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlertMessage from '../../AlertMessage';\r\nimport WebApi from '../../Helpers/WebApi';\r\n\r\nexport class EditEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showAlert: false,\r\n            alertType: '',\r\n            departmentOptions: [],\r\n            fName: '',\r\n            lName: '',\r\n            gender: '',\r\n            salary: '',\r\n            departmentId: '',\r\n            jobTitle: '',\r\n            id: 0,\r\n            message: '',\r\n            readOnly: false\r\n        }\r\n        this.id = 0\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let url = `/api/Departments`\r\n        WebApi(url, '', 'GET')\r\n            .then(response => {\r\n                const departments = response.map((dep, index) => <option key={index + 1} value={dep.ID}>{dep.Name} ({dep.Location}) </option>)\r\n                this.setState({ departmentOptions: departments }, () => {\r\n                });\r\n            });\r\n\r\n        if (this.id !== 0) {\r\n            url = `/api/Employees/` + this.id\r\n            WebApi(url, '', 'GET')\r\n                .then(response => {\r\n                    this.setState({\r\n                        fName: response.FirstName, lName: response.LastName, gender: response.Gender, salary: response.Salary,\r\n                        departmentId: response.DepartmentId, jobTitle: response.JobTitle\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.readOnly) {\r\n            this.setState({ readOnly: false, showAlert: false, alertType: \"\" })\r\n        }\r\n        else {\r\n            if (this.state.DepartmentId === 'select' || this.state.salary === '' || this.state.jobTitle === '') {\r\n                return this.setState({ showAlert: true, alertType: \"danger\" })\r\n            }\r\n            let url = `/api/Employees/` + this.id\r\n            let data = JSON.stringify({\r\n                \"ID\": this.id,\r\n                \"DepartmentId\": this.state.departmentId,\r\n                \"FirstName\": this.state.fName,\r\n                \"LastName\": this.state.lName,\r\n                \"Gender\": this.state.gender,\r\n                \"Salary\": this.state.salary,\r\n                \"JobTitle\": this.state.jobTitle\r\n            })\r\n            WebApi(url, data, 'PUT')\r\n                .then(response => {\r\n                    if (response.Message && response.Message.toUpperCase() === \"SUCCESS\")\r\n                        this.setState({\r\n                            showAlert: true, alertType: 'success', readOnly: true\r\n                        })\r\n                    else\r\n                        return this.setState({ showAlert: true, alertType: \"danger\", message: \"Some error occured, please try again.\" })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render(props) {\r\n        const IsLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!IsLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        if (this.props.location && this.props.location.data && this.props.location.data.ID)\r\n            this.id = this.props.location.data.ID\r\n\r\n        const { fName, lName, gender, salary, departmentId, jobTitle, showAlert, alertType, message, readOnly } = this.state\r\n        const SuccessMessage = \"Employee data has been edited successfully.\"\r\n        const ErrorMessage = \"Please fill in all required fields.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>Edit Employee</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Employee name</label>\r\n                            </div>\r\n                            <label>{fName} {lName}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Gender</label>\r\n                            </div>\r\n                            <label>{gender}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Salary</label>\r\n                            </div>\r\n                            <input className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={salary} onChange={(e) => { this.setState({ salary: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Department</label>\r\n                            </div>\r\n                            <select className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={departmentId} onChange={(e) => { this.setState({ departmentId: e.target.value }) }}>\r\n                                <option key=\"0\" value=\"select\">Select</option>{this.state.departmentOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-5\">\r\n                                <label>Job Title</label>\r\n                            </div>\r\n                            <input className={(readOnly === true ? \"disabled-inputs\" : \"\")} value={jobTitle} onChange={(e) => { this.setState({ jobTitle: e.target.value }) }} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"row p-2\">\r\n                            <div className=\"col-5\"></div>\r\n                            <input className=\"btn btn-success mr-1\" value={(readOnly === true ? \"Edit\" : \"Update\")} onClick={() => this.handleSubmit()} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEmployee\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nexport class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Email: localStorage.getItem(\"myUserName\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h4 className=\"mt-2 mb-5\">\r\n                        <b>User Profile</b>\r\n                    </h4>\r\n                    <form>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Username</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.Email}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">\r\n                                <label>Email</label>\r\n                            </div>\r\n                            <label className=\"mt-1\">{this.state.Email}</label>\r\n                        </div>\r\n                        <div className=\"row  p-2\">\r\n                            <div className=\"col-4\">    \r\n                            </div>  \r\n                            <Link to='/ChangePassword' className=\"mt-1\">Change Password</Link>                          \r\n                        </div>                    \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class NotFoundPage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<h1>Page Not Found</h1>\r\n\t\t\t<p>Sorry, there is nothing to see here.</p>\r\n\t\t\t<p><Link to=\"/\">Back to Home</Link></p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default NotFoundPage\r\n","function ParseError(error) {\r\n    try {\r\n        if (error !== '') {\r\n            let parsedError = JSON.parse(error);\r\n            if (parsedError.ModelState !== null) {\r\n                let modelState = parsedError.ModelState;\r\n                if (Object.getOwnPropertyNames(modelState) !== null) {\r\n                    let modelStateArr = Object.getOwnPropertyNames(modelState)\r\n                    if (modelStateArr[0] === '')\r\n                        return modelState[''][0]\r\n                    else if (modelStateArr[0] === 'model.ConfirmPassword')\r\n                        return modelState['model.ConfirmPassword'][0]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (exception) {\r\n        return 'Some error occured, please try again'\r\n    }\r\n}\r\n\r\nexport default ParseError\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport WebApi from '../../Helpers/WebApi';\r\nimport ParseError from '../../Helpers/ParseError';\r\nimport AlertMessage from '../../AlertMessage';\r\n\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            token: localStorage.getItem('myToken') || '',\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n            showAlert: false,\r\n            alertType: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.oldPassword === '' || this.state.newPassword === '' || this.state.confirmPassword === '')\r\n            return this.setState({ showAlert: true, alertType: \"danger\" })\r\n        let url = `/api/Account/ChangePassword`\r\n        let data = JSON.stringify({\r\n            \"OldPassword\": this.state.oldPassword,\r\n            \"NewPassword\": this.state.newPassword,\r\n            \"ConfirmPassword\": this.state.confirmPassword\r\n        })\r\n        WebApi(url, data, 'POST')\r\n            .then((response) => {\r\n                if (response.Message && response.Message.toUpperCase() === \"SUCCESS\") {\r\n                    return this.setState({ showAlert: true, alertType: 'success', })\r\n                }\r\n                else {\r\n                    return this.setState({ showAlert: true, alertType: \"danger\", message: ParseError(response) })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleBack = () => {\r\n        return this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = localStorage.getItem(\"myToken\");\r\n        if (!isLoggedIn)\r\n            return <Redirect to='/' />\r\n        const { confirmPassword, newPassword, oldPassword, message, showAlert, alertType } = this.state\r\n        const SuccessMessage = \"Password has been changed successfully.\"\r\n        const ErrorMessage = \"OldPassword, NewPassword and ConfirmPassword fields cannot be empty.\"\r\n        let Message\r\n        if (alertType === \"success\")\r\n            Message = SuccessMessage\r\n        else if (alertType === \"danger\") {\r\n            if (message !== '')\r\n                Message = message\r\n            else\r\n                Message = ErrorMessage\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container border\">\r\n                    <h5 className=\"mt-2 mb-5\"><b>Change Password</b></h5>\r\n                    <form>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"><label>Old Password</label></div><input value={oldPassword}\r\n                            onChange={(e) => this.setState({ oldPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input></div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"><label>New Password</label></div><input value={newPassword}\r\n                            onChange={(e) => this.setState({ newPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input></div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"><label>Confirm New Password</label></div><input value={confirmPassword}\r\n                            onChange={(e) => this.setState({ confirmPassword: e.target.value, alertType: '', showAlert: false })} type=\"password\"></input></div>\r\n                        <div className=\"row p-2\"><div className=\"col-4\"></div><input className=\"btn btn-success mr-2\" value=\"Submit\" onClick={this.handleSubmit} type=\"button\"></input>\r\n                            <input className=\"mr-lg-1 btn bg-dark text-white btn-md\" onClick={this.handleBack} type=\"button\" value=\"Back\" /></div>\r\n                    </form>\r\n                </div>\r\n                <AlertMessage message={Message} visible={showAlert} type={alertType}></AlertMessage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Pages/Home';\r\nimport { Employees } from './components/Pages/Employee/Employees';\r\nimport { Departments } from './components/Pages/Department/Departments';\r\nimport { AddDepartment } from './components/Pages/Department/AddDepartment';\r\nimport { EditDepartment } from './components/Pages/Department/EditDepartment';\r\nimport { AddEmployee } from './components/Pages/Employee/AddEmployee';\r\nimport { EditEmployee } from './components/Pages/Employee/EditEmployee';\r\nimport { UserProfile } from './components/Pages/User/UserProfile';\r\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\r\nimport { ChangePassword } from './components/Pages/User/ChangePassword';\r\nimport './components/css/Global.css';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact={true} path='/' component={Home} />\r\n          <Route exact={true} path='/Employees' component={Employees} />\r\n          <Route exact={true} path='/Departments' component={Departments} />\r\n          <Route exact={true} path='/AddDepartment' component={AddDepartment} />\r\n          <Route exact={true} path='/EditDepartment' component={EditDepartment} />\r\n          <Route exact={true} path='/AddEmployee' component={AddEmployee} />\r\n          <Route exact={true} path='/EditEmployee' component={EditEmployee} />\r\n          <Route exact={true} path='/UserProfile' component={UserProfile} />\r\n          <Route exact={true} path='/ChangePassword' component={ChangePassword} />\r\n          <Route path='/*' component={NotFoundPage} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst LoadingIndicator = props => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n    promiseInProgress &&\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"70\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\", alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Loader type=\"ThreeDots\" color=\"#2BAD60\" height={70} width={70} />    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <div>\r\n      <App />\r\n      <LoadingIndicator />\r\n    </div>\r\n  </BrowserRouter>,\r\n\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}